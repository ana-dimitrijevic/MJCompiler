INFO  14:05:05,972 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\unit tests\functionsTest.mj
INFO  14:05:06,037 - #13 program
INFO  14:05:06,037 - #45 MJProgram
INFO  14:05:06,037 - #45 int
INFO  14:05:06,039 - #45 a
INFO  14:05:06,040 - #12 ,
INFO  14:05:06,041 - #45 b
INFO  14:05:06,041 - #7 ;
INFO  14:05:06,041 - #45 char
INFO  14:05:06,042 - #45 arr
INFO  14:05:06,042 - #36 [
INFO  14:05:06,042 - #37 ]
INFO  14:05:06,042 - #7 ;
INFO  14:05:06,042 - #11 {
INFO  14:05:06,042 - #15 void
INFO  14:05:06,043 - #45 fun
INFO  14:05:06,044 - #10 (
INFO  14:05:06,045 - #5 )
INFO  14:05:06,046 - #45 char
INFO  14:05:06,047 - #45 c
INFO  14:05:06,047 - #7 ;
INFO  14:05:06,048 - #11 {
INFO  14:05:06,048 - #14 print
INFO  14:05:06,050 - #10 (
INFO  14:05:06,050 - #44 f
INFO  14:05:06,050 - #5 )
INFO  14:05:06,051 - #7 ;
INFO  14:05:06,051 - #14 print
INFO  14:05:06,052 - #10 (
INFO  14:05:06,052 - #44 u
INFO  14:05:06,052 - #5 )
INFO  14:05:06,052 - #7 ;
INFO  14:05:06,052 - #14 print
INFO  14:05:06,052 - #10 (
INFO  14:05:06,052 - #44 n
INFO  14:05:06,052 - #5 )
INFO  14:05:06,052 - #7 ;
INFO  14:05:06,052 - #8 return
INFO  14:05:06,053 - #7 ;
INFO  14:05:06,053 - #4 }
INFO  14:05:06,053 - #45 bool
INFO  14:05:06,054 - #45 fun2
INFO  14:05:06,054 - #10 (
INFO  14:05:06,054 - #45 int
INFO  14:05:06,058 - #45 a
INFO  14:05:06,059 - #12 ,
INFO  14:05:06,060 - #45 int
INFO  14:05:06,061 - #45 b
INFO  14:05:06,062 - #5 )
INFO  14:05:06,062 - #45 int
INFO  14:05:06,062 - #45 sum
INFO  14:05:06,063 - #7 ;
INFO  14:05:06,063 - #11 {
INFO  14:05:06,063 - #9 if
INFO  14:05:06,064 - #10 (
INFO  14:05:06,064 - #10 (
INFO  14:05:06,065 - #45 a
INFO  14:05:06,065 - #3 +
INFO  14:05:06,066 - #45 b
INFO  14:05:06,067 - #5 )
INFO  14:05:06,072 - #32 >
INFO  14:05:06,073 - #42 10
INFO  14:05:06,074 - #5 )
INFO  14:05:06,075 - #11 {
INFO  14:05:06,076 - #45 sum
INFO  14:05:06,076 - #6 =
INFO  14:05:06,076 - #45 a
INFO  14:05:06,076 - #3 +
INFO  14:05:06,076 - #45 b
INFO  14:05:06,076 - #7 ;
INFO  14:05:06,077 - #14 print
INFO  14:05:06,077 - #10 (
INFO  14:05:06,077 - #45 sum
INFO  14:05:06,077 - #5 )
INFO  14:05:06,077 - #7 ;
INFO  14:05:06,077 - #8 return
INFO  14:05:06,077 - #43 true
INFO  14:05:06,078 - #7 ;
INFO  14:05:06,078 - #4 }
INFO  14:05:06,078 - #2 else
INFO  14:05:06,078 - #11 {
INFO  14:05:06,079 - #8 return
INFO  14:05:06,079 - #43 false
INFO  14:05:06,079 - #7 ;
INFO  14:05:06,079 - #4 }
INFO  14:05:06,079 - #4 }
INFO  14:05:06,080 - #45 int
INFO  14:05:06,080 - #45 inc
INFO  14:05:06,080 - #10 (
INFO  14:05:06,080 - #45 int
INFO  14:05:06,080 - #45 incrementable
INFO  14:05:06,080 - #5 )
INFO  14:05:06,080 - #11 {
INFO  14:05:06,081 - #45 incrementable
INFO  14:05:06,081 - #22 ++
INFO  14:05:06,081 - #7 ;
INFO  14:05:06,081 - #8 return
INFO  14:05:06,081 - #45 incrementable
INFO  14:05:06,081 - #7 ;
INFO  14:05:06,081 - #4 }
INFO  14:05:06,081 - #15 void
INFO  14:05:06,081 - #45 recursive
INFO  14:05:06,081 - #10 (
INFO  14:05:06,082 - #45 int
INFO  14:05:06,082 - #45 a
INFO  14:05:06,082 - #12 ,
INFO  14:05:06,082 - #45 int
INFO  14:05:06,082 - #45 b
INFO  14:05:06,082 - #5 )
INFO  14:05:06,082 - #11 {
INFO  14:05:06,082 - #45 recursive
INFO  14:05:06,082 - #10 (
INFO  14:05:06,083 - #45 a
INFO  14:05:06,083 - #12 ,
INFO  14:05:06,083 - #45 b
INFO  14:05:06,083 - #5 )
INFO  14:05:06,084 - #7 ;
INFO  14:05:06,084 - #4 }
INFO  14:05:06,084 - #45 int
INFO  14:05:06,084 - #45 recursive2
INFO  14:05:06,084 - #10 (
INFO  14:05:06,085 - #45 int
INFO  14:05:06,085 - #45 a
INFO  14:05:06,085 - #12 ,
INFO  14:05:06,085 - #45 int
INFO  14:05:06,085 - #45 b
INFO  14:05:06,085 - #5 )
INFO  14:05:06,085 - #11 {
INFO  14:05:06,086 - #8 return
INFO  14:05:06,086 - #45 recursive2
INFO  14:05:06,086 - #10 (
INFO  14:05:06,087 - #45 inc
INFO  14:05:06,087 - #10 (
INFO  14:05:06,087 - #45 a
INFO  14:05:06,087 - #5 )
INFO  14:05:06,087 - #12 ,
INFO  14:05:06,087 - #45 b
INFO  14:05:06,088 - #5 )
INFO  14:05:06,088 - #7 ;
INFO  14:05:06,089 - #4 }
INFO  14:05:06,089 - #15 void
INFO  14:05:06,089 - #45 main
INFO  14:05:06,089 - #10 (
INFO  14:05:06,089 - #5 )
INFO  14:05:06,089 - #45 int
INFO  14:05:06,089 - #45 i
INFO  14:05:06,090 - #7 ;
INFO  14:05:06,090 - #11 {
INFO  14:05:06,090 - #45 arr
INFO  14:05:06,090 - #6 =
INFO  14:05:06,090 - #18 new
INFO  14:05:06,090 - #45 char
INFO  14:05:06,090 - #36 [
INFO  14:05:06,090 - #42 4
INFO  14:05:06,090 - #37 ]
INFO  14:05:06,091 - #7 ;
INFO  14:05:06,091 - #45 arr
INFO  14:05:06,091 - #36 [
INFO  14:05:06,091 - #42 0
INFO  14:05:06,091 - #37 ]
INFO  14:05:06,091 - #6 =
INFO  14:05:06,091 - #44 a
INFO  14:05:06,092 - #7 ;
INFO  14:05:06,092 - #9 if
INFO  14:05:06,092 - #10 (
INFO  14:05:06,092 - #45 fun2
INFO  14:05:06,092 - #10 (
INFO  14:05:06,092 - #42 6
INFO  14:05:06,092 - #12 ,
INFO  14:05:06,092 - #42 6
INFO  14:05:06,092 - #5 )
INFO  14:05:06,093 - #5 )
INFO  14:05:06,093 - #11 {
INFO  14:05:06,093 - #45 i
INFO  14:05:06,093 - #6 =
INFO  14:05:06,093 - #42 0
INFO  14:05:06,093 - #7 ;
INFO  14:05:06,093 - #20 for
INFO  14:05:06,093 - #10 (
INFO  14:05:06,094 - #7 ;
INFO  14:05:06,097 - #45 i
INFO  14:05:06,098 - #34 <
INFO  14:05:06,098 - #42 3
INFO  14:05:06,099 - #7 ;
INFO  14:05:06,099 - #45 i
INFO  14:05:06,100 - #22 ++
INFO  14:05:06,100 - #5 )
INFO  14:05:06,100 - #11 {
INFO  14:05:06,101 - #45 fun
INFO  14:05:06,101 - #10 (
INFO  14:05:06,101 - #5 )
INFO  14:05:06,102 - #7 ;
INFO  14:05:06,102 - #4 }
INFO  14:05:06,103 - #4 }
INFO  14:05:06,103 - #45 funn
INFO  14:05:06,104 - #10 (
INFO  14:05:06,104 - #5 )
INFO  14:05:06,104 - #7 ;
INFO  14:05:06,104 - #45 i
INFO  14:05:06,105 - #10 (
INFO  14:05:06,105 - #5 )
INFO  14:05:06,105 - #7 ;
INFO  14:05:06,105 - #45 fun
INFO  14:05:06,105 - #10 (
INFO  14:05:06,105 - #42 3
INFO  14:05:06,105 - #5 )
INFO  14:05:06,105 - #7 ;
INFO  14:05:06,105 - #45 fun2
INFO  14:05:06,105 - #10 (
INFO  14:05:06,106 - #42 1
INFO  14:05:06,106 - #12 ,
INFO  14:05:06,106 - #44 a
INFO  14:05:06,106 - #5 )
INFO  14:05:06,106 - #7 ;
INFO  14:05:06,106 - #4 }
INFO  14:05:06,106 - #4 }
ERROR 14:05:06,119 - Greska: funn nije deklarisano!  na liniji 55
ERROR 14:05:06,119 - Dezignator imena i nije metoda  na liniji 56
ERROR 14:05:06,119 - Greska: Ocekivano 0 argumenata, a pri pozivu prosledjeno 1 na liniji 57
ERROR 14:05:06,119 - Greska: razlikuju se tip ocekivanog i stvarnog argumenta 2/2 na liniji 58
INFO  14:05:06,120 - Print calls = 4
ERROR 14:05:06,120 - Parsiranje NIJE uspesno zavrseno!
