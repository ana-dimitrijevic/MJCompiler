INFO  13:58:29,874 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\test\program.mj
INFO  13:58:29,967 - #13 program
INFO  13:58:29,967 - #45 P
INFO  13:58:29,967 - #45 int
INFO  13:58:29,967 - #45 a
INFO  13:58:29,967 - #7 ;
INFO  13:58:29,967 - #45 bool
INFO  13:58:29,967 - #45 prom
INFO  13:58:29,967 - #7 ;
INFO  13:58:29,967 - #45 char
INFO  13:58:29,967 - #45 c
INFO  13:58:29,967 - #7 ;
INFO  13:58:29,967 - #17 const
INFO  13:58:29,967 - #45 int
INFO  13:58:29,967 - #45 kons
INFO  13:58:29,967 - #6 =
INFO  13:58:29,967 - #42 5
INFO  13:58:29,967 - #7 ;
INFO  13:58:29,967 - #11 {
INFO  13:58:29,967 - #45 int
INFO  13:58:29,967 - #45 f
INFO  13:58:29,967 - #10 (
INFO  13:58:29,967 - #5 )
INFO  13:58:29,983 - #11 {
INFO  13:58:29,983 - #8 return
INFO  13:58:29,983 - #42 4
INFO  13:58:29,983 - #7 ;
INFO  13:58:29,983 - #4 }
INFO  13:58:29,983 - #45 int
INFO  13:58:29,983 - #45 myfun
INFO  13:58:29,983 - #10 (
INFO  13:58:29,983 - #45 int
INFO  13:58:29,983 - #45 abv
INFO  13:58:29,983 - #12 ,
INFO  13:58:29,983 - #45 int
INFO  13:58:29,983 - #45 myarg
INFO  13:58:29,983 - #5 )
INFO  13:58:29,983 - #11 {
INFO  13:58:29,983 - #45 myarg
INFO  13:58:29,983 - #22 ++
INFO  13:58:29,983 - #7 ;
INFO  13:58:29,983 - #8 return
INFO  13:58:29,983 - #45 myarg
INFO  13:58:29,983 - #7 ;
INFO  13:58:29,983 - #4 }
INFO  13:58:29,983 - #45 char
INFO  13:58:29,983 - #45 o
INFO  13:58:29,983 - #10 (
INFO  13:58:29,983 - #5 )
INFO  13:58:29,983 - #45 int
INFO  13:58:29,983 - #45 p
INFO  13:58:29,983 - #7 ;
INFO  13:58:29,983 - #11 {
INFO  13:58:29,983 - #8 return
INFO  13:58:29,983 - #44 a
INFO  13:58:29,983 - #7 ;
INFO  13:58:29,983 - #4 }
INFO  13:58:29,983 - #45 int
INFO  13:58:29,983 - #45 k
INFO  13:58:29,983 - #10 (
INFO  13:58:29,999 - #45 int
INFO  13:58:29,999 - #45 p
INFO  13:58:29,999 - #12 ,
INFO  13:58:29,999 - #45 int
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #12 ,
INFO  13:58:29,999 - #45 char
INFO  13:58:29,999 - #45 z
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #5 )
INFO  13:58:29,999 - #45 int
INFO  13:58:29,999 - #45 x
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #11 {
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 1
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #6 =
INFO  13:58:29,999 - #42 5
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #45 x
INFO  13:58:29,999 - #6 =
INFO  13:58:29,999 - #24 -
INFO  13:58:29,999 - #42 5
INFO  13:58:29,999 - #3 +
INFO  13:58:29,999 - #42 15
INFO  13:58:29,999 - #25 *
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 3
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #45 x
INFO  13:58:29,999 - #6 =
INFO  13:58:29,999 - #24 -
INFO  13:58:29,999 - #45 p
INFO  13:58:29,999 - #25 *
INFO  13:58:29,999 - #42 12
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #45 p
INFO  13:58:29,999 - #6 =
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 3
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #45 c
INFO  13:58:29,999 - #6 =
INFO  13:58:29,999 - #45 z
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 3
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 3
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #6 =
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 3
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #3 +
INFO  13:58:29,999 - #42 5
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 3
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #6 =
INFO  13:58:29,999 - #42 5
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #14 print
INFO  13:58:29,999 - #10 (
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #45 a
INFO  13:58:29,999 - #3 +
INFO  13:58:29,999 - #42 1
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #5 )
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #14 print
INFO  13:58:29,999 - #10 (
INFO  13:58:29,999 - #45 x
INFO  13:58:29,999 - #5 )
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #14 print
INFO  13:58:29,999 - #10 (
INFO  13:58:29,999 - #45 x
INFO  13:58:29,999 - #3 +
INFO  13:58:29,999 - #42 12
INFO  13:58:29,999 - #12 ,
INFO  13:58:29,999 - #42 1
INFO  13:58:29,999 - #5 )
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #19 read
INFO  13:58:29,999 - #10 (
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 1
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #5 )
INFO  13:58:29,999 - #7 ;
INFO  13:58:29,999 - #45 q
INFO  13:58:29,999 - #36 [
INFO  13:58:29,999 - #42 0
INFO  13:58:29,999 - #37 ]
INFO  13:58:29,999 - #23 --
INFO  13:58:29,999 - #7 ;
INFO  13:58:30,014 - #45 x
INFO  13:58:30,014 - #23 --
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #45 prom
INFO  13:58:30,014 - #6 =
INFO  13:58:30,014 - #43 true
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #6 =
INFO  13:58:30,014 - #45 q
INFO  13:58:30,014 - #36 [
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #37 ]
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #6 =
INFO  13:58:30,014 - #45 q
INFO  13:58:30,014 - #36 [
INFO  13:58:30,014 - #42 1
INFO  13:58:30,014 - #37 ]
INFO  13:58:30,014 - #3 +
INFO  13:58:30,014 - #45 q
INFO  13:58:30,014 - #36 [
INFO  13:58:30,014 - #42 2
INFO  13:58:30,014 - #37 ]
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #8 return
INFO  13:58:30,014 - #42 5
INFO  13:58:30,014 - #3 +
INFO  13:58:30,014 - #42 1
INFO  13:58:30,014 - #3 +
INFO  13:58:30,014 - #42 2
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #4 }
INFO  13:58:30,014 - #15 void
INFO  13:58:30,014 - #45 main
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #11 {
INFO  13:58:30,014 - #20 for
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #6 =
INFO  13:58:30,014 - #42 0
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #34 <
INFO  13:58:30,014 - #42 5
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #22 ++
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #11 {
INFO  13:58:30,014 - #20 for
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #11 {
INFO  13:58:30,014 - #4 }
INFO  13:58:30,014 - #4 }
INFO  13:58:30,014 - #14 print
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #12 ,
INFO  13:58:30,014 - #42 2
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #45 myfun
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #42 1
INFO  13:58:30,014 - #12 ,
INFO  13:58:30,014 - #45 myfun
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #42 1
INFO  13:58:30,014 - #12 ,
INFO  13:58:30,014 - #42 1
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #45 myfun
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #42 1
INFO  13:58:30,014 - #12 ,
INFO  13:58:30,014 - #45 f
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #7 ;
INFO  13:58:30,014 - #9 if
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #43 true
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #11 {
INFO  13:58:30,014 - #4 }
INFO  13:58:30,014 - #2 else
INFO  13:58:30,014 - #9 if
INFO  13:58:30,014 - #10 (
INFO  13:58:30,014 - #45 a
INFO  13:58:30,014 - #30 ==
INFO  13:58:30,014 - #42 0
INFO  13:58:30,014 - #28 &&
INFO  13:58:30,014 - #43 true
INFO  13:58:30,014 - #5 )
INFO  13:58:30,014 - #11 {
INFO  13:58:30,014 - #45 a
INFO  13:58:30,030 - #22 ++
INFO  13:58:30,030 - #7 ;
INFO  13:58:30,030 - #4 }
INFO  13:58:30,030 - #4 }
INFO  13:58:30,030 - #4 }
INFO  13:58:30,046 - Print calls = 4
INFO  13:58:30,046 - Generating bytecode file: D:\Trenutni pp\workspace\MJCompiler\test\program.obj
INFO  13:58:30,046 - Parsiranje uspesno zavrseno!
