INFO  13:58:50,825 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\test\program.mj
INFO  13:58:50,904 - #13 program
INFO  13:58:50,904 - #45 P
INFO  13:58:50,904 - #45 int
INFO  13:58:50,904 - #45 a
INFO  13:58:50,904 - #7 ;
INFO  13:58:50,904 - #45 bool
INFO  13:58:50,904 - #45 prom
INFO  13:58:50,904 - #7 ;
INFO  13:58:50,904 - #45 char
INFO  13:58:50,904 - #45 c
INFO  13:58:50,904 - #7 ;
INFO  13:58:50,904 - #17 const
INFO  13:58:50,904 - #45 int
INFO  13:58:50,904 - #45 kons
INFO  13:58:50,904 - #6 =
INFO  13:58:50,919 - #42 5
INFO  13:58:50,919 - #7 ;
INFO  13:58:50,919 - #11 {
INFO  13:58:50,919 - #45 int
INFO  13:58:50,919 - #45 f
INFO  13:58:50,919 - #10 (
INFO  13:58:50,919 - #5 )
INFO  13:58:50,919 - #11 {
INFO  13:58:50,919 - #8 return
INFO  13:58:50,919 - #42 4
INFO  13:58:50,919 - #7 ;
INFO  13:58:50,919 - #4 }
INFO  13:58:50,919 - #45 int
INFO  13:58:50,919 - #45 myfun
INFO  13:58:50,919 - #10 (
INFO  13:58:50,919 - #45 int
INFO  13:58:50,919 - #45 abv
INFO  13:58:50,919 - #12 ,
INFO  13:58:50,919 - #45 int
INFO  13:58:50,919 - #45 myarg
INFO  13:58:50,919 - #5 )
INFO  13:58:50,919 - #11 {
INFO  13:58:50,919 - #45 myarg
INFO  13:58:50,919 - #22 ++
INFO  13:58:50,919 - #7 ;
INFO  13:58:50,919 - #8 return
INFO  13:58:50,919 - #45 myarg
INFO  13:58:50,919 - #7 ;
INFO  13:58:50,919 - #4 }
INFO  13:58:50,919 - #45 char
INFO  13:58:50,919 - #45 o
INFO  13:58:50,919 - #10 (
INFO  13:58:50,919 - #5 )
INFO  13:58:50,919 - #45 int
INFO  13:58:50,919 - #45 p
INFO  13:58:50,919 - #7 ;
INFO  13:58:50,919 - #11 {
INFO  13:58:50,919 - #8 return
INFO  13:58:50,919 - #44 a
INFO  13:58:50,919 - #7 ;
INFO  13:58:50,919 - #4 }
INFO  13:58:50,919 - #45 int
INFO  13:58:50,919 - #45 k
INFO  13:58:50,919 - #10 (
INFO  13:58:50,935 - #45 int
INFO  13:58:50,935 - #45 p
INFO  13:58:50,935 - #12 ,
INFO  13:58:50,935 - #45 int
INFO  13:58:50,935 - #45 q
INFO  13:58:50,935 - #36 [
INFO  13:58:50,935 - #37 ]
INFO  13:58:50,935 - #12 ,
INFO  13:58:50,935 - #45 char
INFO  13:58:50,935 - #45 z
INFO  13:58:50,935 - #36 [
INFO  13:58:50,935 - #37 ]
INFO  13:58:50,935 - #5 )
INFO  13:58:50,935 - #45 int
INFO  13:58:50,935 - #45 x
INFO  13:58:50,935 - #7 ;
INFO  13:58:50,935 - #11 {
INFO  13:58:50,935 - #45 q
INFO  13:58:50,935 - #36 [
INFO  13:58:50,935 - #45 q
INFO  13:58:50,935 - #36 [
INFO  13:58:50,935 - #42 1
INFO  13:58:50,935 - #37 ]
INFO  13:58:50,935 - #37 ]
INFO  13:58:50,935 - #6 =
INFO  13:58:50,935 - #42 5
INFO  13:58:50,935 - #7 ;
INFO  13:58:50,935 - #45 x
INFO  13:58:50,935 - #6 =
INFO  13:58:50,935 - #24 -
INFO  13:58:50,935 - #42 5
INFO  13:58:50,935 - #3 +
INFO  13:58:50,935 - #42 15
INFO  13:58:50,935 - #25 *
INFO  13:58:50,935 - #45 q
INFO  13:58:50,935 - #36 [
INFO  13:58:50,935 - #42 3
INFO  13:58:50,935 - #37 ]
INFO  13:58:50,935 - #7 ;
INFO  13:58:50,950 - #45 x
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #24 -
INFO  13:58:50,950 - #45 p
INFO  13:58:50,950 - #25 *
INFO  13:58:50,950 - #42 12
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 p
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 3
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 c
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #45 z
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 3
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 3
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 3
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #3 +
INFO  13:58:50,950 - #42 5
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 3
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #42 5
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #14 print
INFO  13:58:50,950 - #10 (
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #45 a
INFO  13:58:50,950 - #3 +
INFO  13:58:50,950 - #42 1
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #5 )
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #14 print
INFO  13:58:50,950 - #10 (
INFO  13:58:50,950 - #45 x
INFO  13:58:50,950 - #5 )
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #14 print
INFO  13:58:50,950 - #10 (
INFO  13:58:50,950 - #45 x
INFO  13:58:50,950 - #3 +
INFO  13:58:50,950 - #42 12
INFO  13:58:50,950 - #12 ,
INFO  13:58:50,950 - #42 1
INFO  13:58:50,950 - #5 )
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #19 read
INFO  13:58:50,950 - #10 (
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 1
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #5 )
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 0
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #23 --
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 x
INFO  13:58:50,950 - #23 --
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 prom
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #43 true
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 a
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #45 a
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #45 a
INFO  13:58:50,950 - #6 =
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 1
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #3 +
INFO  13:58:50,950 - #45 q
INFO  13:58:50,950 - #36 [
INFO  13:58:50,950 - #42 2
INFO  13:58:50,950 - #37 ]
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #8 return
INFO  13:58:50,950 - #42 5
INFO  13:58:50,950 - #3 +
INFO  13:58:50,950 - #42 1
INFO  13:58:50,950 - #3 +
INFO  13:58:50,950 - #42 2
INFO  13:58:50,950 - #7 ;
INFO  13:58:50,950 - #4 }
INFO  13:58:50,950 - #15 void
INFO  13:58:50,950 - #45 main
INFO  13:58:50,950 - #10 (
INFO  13:58:50,950 - #5 )
INFO  13:58:50,966 - #11 {
INFO  13:58:50,966 - #20 for
INFO  13:58:50,966 - #10 (
INFO  13:58:50,966 - #45 a
INFO  13:58:50,966 - #6 =
INFO  13:58:50,966 - #42 0
INFO  13:58:50,966 - #7 ;
INFO  13:58:50,966 - #45 a
INFO  13:58:50,966 - #34 <
INFO  13:58:50,966 - #42 5
INFO  13:58:50,966 - #7 ;
INFO  13:58:50,966 - #45 a
INFO  13:58:50,966 - #22 ++
INFO  13:58:50,966 - #5 )
INFO  13:58:50,966 - #11 {
INFO  13:58:50,966 - #20 for
INFO  13:58:50,966 - #10 (
INFO  13:58:50,966 - #7 ;
INFO  13:58:50,966 - #7 ;
INFO  13:58:50,966 - #5 )
INFO  13:58:50,966 - #11 {
INFO  13:58:50,966 - #4 }
INFO  13:58:50,966 - #4 }
INFO  13:58:50,966 - #14 print
INFO  13:58:50,966 - #10 (
INFO  13:58:50,966 - #45 a
INFO  13:58:50,966 - #12 ,
INFO  13:58:50,966 - #42 2
INFO  13:58:50,966 - #5 )
INFO  13:58:50,966 - #7 ;
INFO  13:58:50,966 - #45 myfun
INFO  13:58:50,966 - #10 (
INFO  13:58:50,966 - #42 1
INFO  13:58:50,966 - #12 ,
INFO  13:58:50,966 - #45 myfun
INFO  13:58:50,966 - #10 (
INFO  13:58:50,982 - #42 1
INFO  13:58:50,982 - #12 ,
INFO  13:58:50,982 - #42 1
INFO  13:58:50,982 - #5 )
INFO  13:58:50,982 - #5 )
INFO  13:58:50,982 - #7 ;
INFO  13:58:50,982 - #45 myfun
INFO  13:58:50,982 - #10 (
INFO  13:58:50,982 - #42 1
INFO  13:58:50,982 - #12 ,
INFO  13:58:50,982 - #45 f
INFO  13:58:50,982 - #10 (
INFO  13:58:50,982 - #5 )
INFO  13:58:50,982 - #5 )
INFO  13:58:50,982 - #7 ;
INFO  13:58:50,982 - #9 if
INFO  13:58:50,982 - #10 (
INFO  13:58:50,982 - #43 true
INFO  13:58:50,982 - #5 )
INFO  13:58:50,982 - #11 {
INFO  13:58:50,982 - #4 }
INFO  13:58:50,982 - #2 else
INFO  13:58:50,982 - #9 if
INFO  13:58:50,982 - #10 (
INFO  13:58:50,982 - #45 a
INFO  13:58:50,982 - #30 ==
INFO  13:58:50,982 - #42 0
INFO  13:58:50,982 - #28 &&
INFO  13:58:50,982 - #43 true
INFO  13:58:50,982 - #31 !=
INFO  13:58:50,982 - #43 true
INFO  13:58:50,982 - #5 )
INFO  13:58:50,982 - #11 {
INFO  13:58:50,982 - #45 a
INFO  13:58:50,982 - #22 ++
INFO  13:58:50,982 - #7 ;
INFO  13:58:50,982 - #4 }
INFO  13:58:50,982 - #4 }
INFO  13:58:50,982 - #4 }
INFO  13:58:50,997 - Print calls = 4
INFO  13:58:50,997 - Generating bytecode file: D:\Trenutni pp\workspace\MJCompiler\test\program.obj
INFO  13:58:51,013 - Parsiranje uspesno zavrseno!
