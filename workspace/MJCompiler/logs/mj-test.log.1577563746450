INFO  20:57:11,670 - Compiling source file: D:\Marko pp\workspace\MJCompiler\test\program.mj
INFO  20:57:11,732 - #13 program
INFO  20:57:11,732 - #45 P
INFO  20:57:11,732 - #45 int
INFO  20:57:11,748 - #45 a
INFO  20:57:11,748 - #7 ;
INFO  20:57:11,748 - #45 bool
INFO  20:57:11,748 - #45 prom
INFO  20:57:11,748 - #7 ;
INFO  20:57:11,748 - #45 char
INFO  20:57:11,748 - #45 c
INFO  20:57:11,748 - #7 ;
INFO  20:57:11,748 - #17 const
INFO  20:57:11,748 - #45 int
INFO  20:57:11,748 - #45 kons
INFO  20:57:11,748 - #6 =
INFO  20:57:11,748 - #42 5
INFO  20:57:11,748 - #7 ;
INFO  20:57:11,748 - #11 {
INFO  20:57:11,748 - #45 int
INFO  20:57:11,748 - #45 f
INFO  20:57:11,748 - #10 (
INFO  20:57:11,748 - #5 )
INFO  20:57:11,764 - #11 {
INFO  20:57:11,764 - #8 return
INFO  20:57:11,764 - #42 4
INFO  20:57:11,764 - #7 ;
INFO  20:57:11,764 - #4 }
INFO  20:57:11,764 - #45 int
INFO  20:57:11,764 - #45 myfun
INFO  20:57:11,764 - #10 (
INFO  20:57:11,764 - #45 int
INFO  20:57:11,764 - #45 abv
INFO  20:57:11,764 - #12 ,
INFO  20:57:11,764 - #45 int
INFO  20:57:11,764 - #45 myarg
INFO  20:57:11,764 - #5 )
INFO  20:57:11,764 - #11 {
INFO  20:57:11,764 - #45 myarg
INFO  20:57:11,764 - #22 ++
INFO  20:57:11,764 - #7 ;
INFO  20:57:11,764 - #8 return
INFO  20:57:11,764 - #45 myarg
INFO  20:57:11,764 - #7 ;
INFO  20:57:11,764 - #4 }
INFO  20:57:11,764 - #45 char
INFO  20:57:11,764 - #45 o
INFO  20:57:11,764 - #10 (
INFO  20:57:11,764 - #5 )
INFO  20:57:11,764 - #45 int
INFO  20:57:11,764 - #45 p
INFO  20:57:11,764 - #7 ;
INFO  20:57:11,764 - #11 {
INFO  20:57:11,764 - #8 return
INFO  20:57:11,764 - #44 a
INFO  20:57:11,764 - #7 ;
INFO  20:57:11,764 - #4 }
INFO  20:57:11,764 - #45 int
INFO  20:57:11,764 - #45 k
INFO  20:57:11,764 - #10 (
INFO  20:57:11,779 - #45 int
INFO  20:57:11,779 - #45 p
INFO  20:57:11,779 - #12 ,
INFO  20:57:11,779 - #45 int
INFO  20:57:11,779 - #45 q
INFO  20:57:11,779 - #36 [
INFO  20:57:11,779 - #37 ]
INFO  20:57:11,779 - #12 ,
INFO  20:57:11,779 - #45 char
INFO  20:57:11,779 - #45 z
INFO  20:57:11,779 - #36 [
INFO  20:57:11,779 - #37 ]
INFO  20:57:11,779 - #5 )
INFO  20:57:11,779 - #45 int
INFO  20:57:11,779 - #45 x
INFO  20:57:11,779 - #7 ;
INFO  20:57:11,779 - #11 {
INFO  20:57:11,779 - #45 q
INFO  20:57:11,779 - #36 [
INFO  20:57:11,779 - #45 q
INFO  20:57:11,779 - #36 [
INFO  20:57:11,779 - #42 1
INFO  20:57:11,779 - #37 ]
INFO  20:57:11,779 - #37 ]
INFO  20:57:11,779 - #6 =
INFO  20:57:11,779 - #42 5
INFO  20:57:11,779 - #7 ;
INFO  20:57:11,779 - #45 x
INFO  20:57:11,779 - #6 =
INFO  20:57:11,779 - #24 -
INFO  20:57:11,779 - #42 5
INFO  20:57:11,779 - #3 +
INFO  20:57:11,779 - #42 15
INFO  20:57:11,779 - #25 *
INFO  20:57:11,779 - #45 q
INFO  20:57:11,779 - #36 [
INFO  20:57:11,779 - #42 3
INFO  20:57:11,779 - #37 ]
INFO  20:57:11,779 - #7 ;
INFO  20:57:11,779 - #45 x
INFO  20:57:11,779 - #6 =
INFO  20:57:11,779 - #24 -
INFO  20:57:11,779 - #45 p
INFO  20:57:11,779 - #25 *
INFO  20:57:11,779 - #42 12
INFO  20:57:11,779 - #7 ;
INFO  20:57:11,779 - #45 p
INFO  20:57:11,779 - #6 =
INFO  20:57:11,779 - #45 q
INFO  20:57:11,779 - #36 [
INFO  20:57:11,779 - #42 3
INFO  20:57:11,779 - #37 ]
INFO  20:57:11,779 - #7 ;
INFO  20:57:11,779 - #45 c
INFO  20:57:11,795 - #6 =
INFO  20:57:11,795 - #45 z
INFO  20:57:11,795 - #36 [
INFO  20:57:11,795 - #42 3
INFO  20:57:11,795 - #37 ]
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #45 q
INFO  20:57:11,795 - #36 [
INFO  20:57:11,795 - #42 3
INFO  20:57:11,795 - #37 ]
INFO  20:57:11,795 - #6 =
INFO  20:57:11,795 - #45 q
INFO  20:57:11,795 - #36 [
INFO  20:57:11,795 - #42 3
INFO  20:57:11,795 - #37 ]
INFO  20:57:11,795 - #3 +
INFO  20:57:11,795 - #42 5
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #45 q
INFO  20:57:11,795 - #36 [
INFO  20:57:11,795 - #42 3
INFO  20:57:11,795 - #37 ]
INFO  20:57:11,795 - #6 =
INFO  20:57:11,795 - #42 5
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #14 print
INFO  20:57:11,795 - #10 (
INFO  20:57:11,795 - #45 q
INFO  20:57:11,795 - #36 [
INFO  20:57:11,795 - #45 a
INFO  20:57:11,795 - #3 +
INFO  20:57:11,795 - #42 1
INFO  20:57:11,795 - #37 ]
INFO  20:57:11,795 - #5 )
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #14 print
INFO  20:57:11,795 - #10 (
INFO  20:57:11,795 - #45 x
INFO  20:57:11,795 - #5 )
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #14 print
INFO  20:57:11,795 - #10 (
INFO  20:57:11,795 - #45 x
INFO  20:57:11,795 - #3 +
INFO  20:57:11,795 - #42 12
INFO  20:57:11,795 - #12 ,
INFO  20:57:11,795 - #42 1
INFO  20:57:11,795 - #5 )
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #19 read
INFO  20:57:11,795 - #10 (
INFO  20:57:11,795 - #45 q
INFO  20:57:11,795 - #36 [
INFO  20:57:11,795 - #42 1
INFO  20:57:11,795 - #37 ]
INFO  20:57:11,795 - #5 )
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #45 q
INFO  20:57:11,795 - #36 [
INFO  20:57:11,795 - #42 0
INFO  20:57:11,795 - #37 ]
INFO  20:57:11,795 - #23 --
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #45 x
INFO  20:57:11,795 - #23 --
INFO  20:57:11,795 - #7 ;
INFO  20:57:11,795 - #45 q
INFO  20:57:11,811 - #36 [
INFO  20:57:11,811 - #42 3
INFO  20:57:11,811 - #37 ]
INFO  20:57:11,811 - #6 =
INFO  20:57:11,811 - #45 f
INFO  20:57:11,811 - #10 (
INFO  20:57:11,811 - #5 )
INFO  20:57:11,811 - #3 +
INFO  20:57:11,811 - #42 3
INFO  20:57:11,811 - #3 +
INFO  20:57:11,811 - #45 q
INFO  20:57:11,811 - #36 [
INFO  20:57:11,811 - #42 1
INFO  20:57:11,811 - #37 ]
INFO  20:57:11,811 - #3 +
INFO  20:57:11,811 - #45 x
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #45 prom
INFO  20:57:11,811 - #6 =
INFO  20:57:11,811 - #43 true
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #45 a
INFO  20:57:11,811 - #6 =
INFO  20:57:11,811 - #45 q
INFO  20:57:11,811 - #36 [
INFO  20:57:11,811 - #45 a
INFO  20:57:11,811 - #37 ]
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #45 a
INFO  20:57:11,811 - #6 =
INFO  20:57:11,811 - #45 q
INFO  20:57:11,811 - #36 [
INFO  20:57:11,811 - #42 1
INFO  20:57:11,811 - #37 ]
INFO  20:57:11,811 - #3 +
INFO  20:57:11,811 - #45 q
INFO  20:57:11,811 - #36 [
INFO  20:57:11,811 - #42 2
INFO  20:57:11,811 - #37 ]
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #8 return
INFO  20:57:11,811 - #42 5
INFO  20:57:11,811 - #3 +
INFO  20:57:11,811 - #42 1
INFO  20:57:11,811 - #3 +
INFO  20:57:11,811 - #42 2
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #4 }
INFO  20:57:11,811 - #15 void
INFO  20:57:11,811 - #45 main
INFO  20:57:11,811 - #10 (
INFO  20:57:11,811 - #5 )
INFO  20:57:11,811 - #11 {
INFO  20:57:11,811 - #20 for
INFO  20:57:11,811 - #10 (
INFO  20:57:11,811 - #45 a
INFO  20:57:11,811 - #6 =
INFO  20:57:11,811 - #42 0
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #45 a
INFO  20:57:11,811 - #34 <
INFO  20:57:11,811 - #42 5
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #45 a
INFO  20:57:11,811 - #22 ++
INFO  20:57:11,811 - #5 )
INFO  20:57:11,811 - #11 {
INFO  20:57:11,811 - #20 for
INFO  20:57:11,811 - #10 (
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #5 )
INFO  20:57:11,811 - #11 {
INFO  20:57:11,811 - #4 }
INFO  20:57:11,811 - #4 }
INFO  20:57:11,811 - #14 print
INFO  20:57:11,811 - #10 (
INFO  20:57:11,811 - #45 a
INFO  20:57:11,811 - #12 ,
INFO  20:57:11,811 - #42 2
INFO  20:57:11,811 - #5 )
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #45 myfun
INFO  20:57:11,811 - #10 (
INFO  20:57:11,811 - #42 1
INFO  20:57:11,811 - #12 ,
INFO  20:57:11,811 - #42 2
INFO  20:57:11,811 - #5 )
INFO  20:57:11,811 - #7 ;
INFO  20:57:11,811 - #4 }
INFO  20:57:11,811 - #4 }
INFO  20:57:11,842 - Obradjuje se funkcija f na liniji 8
INFO  20:57:11,842 - Obradjuje se funkcija myfun na liniji 12
INFO  20:57:11,842 - Obradjuje se funkcija o na liniji 18
INFO  20:57:11,842 - Obradjuje se funkcija k na liniji 23
INFO  20:57:11,842 - Obradjuje se funkcija main na liniji 99
INFO  20:57:11,842 - Print calls = 4
INFO  20:57:11,842 - Generating bytecode file: D:\Marko pp\workspace\MJCompiler\test\program.obj
INFO  20:57:11,857 - Parsiranje uspesno zavrseno!
