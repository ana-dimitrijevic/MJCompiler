INFO  14:00:19,160 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\unit tests\functionsTest.mj
INFO  14:00:19,219 - #13 program
INFO  14:00:19,219 - #45 MJProgram
INFO  14:00:19,219 - #45 int
INFO  14:00:19,221 - #45 a
INFO  14:00:19,222 - #12 ,
INFO  14:00:19,223 - #45 b
INFO  14:00:19,223 - #7 ;
INFO  14:00:19,223 - #45 char
INFO  14:00:19,224 - #45 arr
INFO  14:00:19,224 - #36 [
INFO  14:00:19,224 - #37 ]
INFO  14:00:19,224 - #7 ;
INFO  14:00:19,224 - #11 {
INFO  14:00:19,225 - #15 void
INFO  14:00:19,225 - #45 fun
INFO  14:00:19,226 - #10 (
INFO  14:00:19,229 - #5 )
INFO  14:00:19,231 - #45 char
INFO  14:00:19,232 - #45 c
INFO  14:00:19,233 - #7 ;
INFO  14:00:19,233 - #11 {
INFO  14:00:19,233 - #14 print
INFO  14:00:19,236 - #10 (
INFO  14:00:19,236 - #44 f
INFO  14:00:19,236 - #5 )
INFO  14:00:19,237 - #7 ;
INFO  14:00:19,237 - #14 print
INFO  14:00:19,238 - #10 (
INFO  14:00:19,238 - #44 u
INFO  14:00:19,238 - #5 )
INFO  14:00:19,238 - #7 ;
INFO  14:00:19,238 - #14 print
INFO  14:00:19,238 - #10 (
INFO  14:00:19,238 - #44 n
INFO  14:00:19,238 - #5 )
INFO  14:00:19,239 - #7 ;
INFO  14:00:19,239 - #8 return
INFO  14:00:19,239 - #7 ;
INFO  14:00:19,239 - #4 }
INFO  14:00:19,240 - #45 bool
INFO  14:00:19,240 - #45 fun2
INFO  14:00:19,240 - #10 (
INFO  14:00:19,240 - #45 int
INFO  14:00:19,240 - #45 a
INFO  14:00:19,241 - #12 ,
INFO  14:00:19,241 - #45 int
INFO  14:00:19,241 - #45 b
INFO  14:00:19,241 - #5 )
INFO  14:00:19,242 - #45 int
INFO  14:00:19,242 - #45 sum
INFO  14:00:19,242 - #7 ;
INFO  14:00:19,242 - #11 {
INFO  14:00:19,242 - #9 if
INFO  14:00:19,242 - #10 (
INFO  14:00:19,243 - #10 (
INFO  14:00:19,244 - #45 a
INFO  14:00:19,244 - #3 +
INFO  14:00:19,245 - #45 b
INFO  14:00:19,246 - #5 )
INFO  14:00:19,252 - #32 >
INFO  14:00:19,252 - #42 10
INFO  14:00:19,253 - #5 )
INFO  14:00:19,254 - #11 {
INFO  14:00:19,255 - #45 sum
INFO  14:00:19,255 - #6 =
INFO  14:00:19,255 - #45 a
INFO  14:00:19,256 - #3 +
INFO  14:00:19,256 - #45 b
INFO  14:00:19,256 - #7 ;
INFO  14:00:19,256 - #14 print
INFO  14:00:19,256 - #10 (
INFO  14:00:19,256 - #45 sum
INFO  14:00:19,257 - #5 )
INFO  14:00:19,257 - #7 ;
INFO  14:00:19,257 - #8 return
INFO  14:00:19,257 - #43 true
INFO  14:00:19,257 - #7 ;
INFO  14:00:19,257 - #4 }
INFO  14:00:19,257 - #2 else
INFO  14:00:19,257 - #11 {
INFO  14:00:19,258 - #8 return
INFO  14:00:19,258 - #43 false
INFO  14:00:19,258 - #7 ;
INFO  14:00:19,258 - #4 }
INFO  14:00:19,258 - #4 }
INFO  14:00:19,259 - #15 void
INFO  14:00:19,259 - #45 recursive
INFO  14:00:19,259 - #10 (
INFO  14:00:19,259 - #45 int
INFO  14:00:19,259 - #45 a
INFO  14:00:19,259 - #12 ,
INFO  14:00:19,259 - #45 int
INFO  14:00:19,259 - #45 b
INFO  14:00:19,259 - #5 )
INFO  14:00:19,259 - #11 {
INFO  14:00:19,259 - #45 recursive
INFO  14:00:19,260 - #10 (
INFO  14:00:19,260 - #45 a
INFO  14:00:19,261 - #12 ,
INFO  14:00:19,261 - #45 b
INFO  14:00:19,261 - #5 )
INFO  14:00:19,261 - #7 ;
INFO  14:00:19,261 - #4 }
INFO  14:00:19,261 - #15 void
INFO  14:00:19,261 - #45 main
INFO  14:00:19,261 - #10 (
INFO  14:00:19,261 - #5 )
INFO  14:00:19,262 - #45 int
INFO  14:00:19,262 - #45 i
INFO  14:00:19,262 - #7 ;
INFO  14:00:19,262 - #11 {
INFO  14:00:19,262 - #45 arr
INFO  14:00:19,262 - #6 =
INFO  14:00:19,262 - #18 new
INFO  14:00:19,262 - #45 char
INFO  14:00:19,262 - #36 [
INFO  14:00:19,262 - #42 4
INFO  14:00:19,262 - #37 ]
INFO  14:00:19,263 - #7 ;
INFO  14:00:19,263 - #45 arr
INFO  14:00:19,263 - #36 [
INFO  14:00:19,263 - #42 0
INFO  14:00:19,263 - #37 ]
INFO  14:00:19,263 - #6 =
INFO  14:00:19,263 - #44 a
INFO  14:00:19,264 - #7 ;
INFO  14:00:19,264 - #9 if
INFO  14:00:19,264 - #10 (
INFO  14:00:19,264 - #45 fun2
INFO  14:00:19,264 - #10 (
INFO  14:00:19,265 - #42 6
INFO  14:00:19,265 - #12 ,
INFO  14:00:19,265 - #42 6
INFO  14:00:19,265 - #5 )
INFO  14:00:19,266 - #5 )
INFO  14:00:19,266 - #11 {
INFO  14:00:19,266 - #45 i
INFO  14:00:19,266 - #6 =
INFO  14:00:19,266 - #42 0
INFO  14:00:19,267 - #7 ;
INFO  14:00:19,267 - #20 for
INFO  14:00:19,267 - #10 (
INFO  14:00:19,267 - #7 ;
INFO  14:00:19,268 - #45 i
INFO  14:00:19,269 - #34 <
INFO  14:00:19,269 - #42 3
INFO  14:00:19,269 - #7 ;
INFO  14:00:19,270 - #45 i
INFO  14:00:19,270 - #22 ++
INFO  14:00:19,270 - #5 )
INFO  14:00:19,271 - #11 {
INFO  14:00:19,271 - #45 fun
INFO  14:00:19,272 - #10 (
INFO  14:00:19,272 - #5 )
INFO  14:00:19,272 - #7 ;
INFO  14:00:19,272 - #4 }
INFO  14:00:19,272 - #4 }
INFO  14:00:19,273 - #45 funn
INFO  14:00:19,273 - #10 (
INFO  14:00:19,273 - #5 )
INFO  14:00:19,273 - #7 ;
INFO  14:00:19,274 - #45 i
INFO  14:00:19,274 - #10 (
INFO  14:00:19,274 - #5 )
INFO  14:00:19,274 - #7 ;
INFO  14:00:19,274 - #45 fun
INFO  14:00:19,274 - #10 (
INFO  14:00:19,274 - #42 3
INFO  14:00:19,274 - #5 )
INFO  14:00:19,274 - #7 ;
INFO  14:00:19,274 - #45 fun2
INFO  14:00:19,274 - #10 (
INFO  14:00:19,274 - #42 1
INFO  14:00:19,274 - #12 ,
INFO  14:00:19,274 - #44 a
INFO  14:00:19,275 - #5 )
INFO  14:00:19,275 - #7 ;
INFO  14:00:19,275 - #4 }
INFO  14:00:19,275 - #4 }
ERROR 14:00:19,288 - Greska: funn nije deklarisano!  na liniji 48
ERROR 14:00:19,289 - Dezignator imena i nije metoda  na liniji 49
ERROR 14:00:19,289 - Greska: Ocekivano 0 argumenata, a pri pozivu prosledjeno 1 na liniji 50
ERROR 14:00:19,289 - Greska: razlikuju se tip ocekivanog i stvarnog argumenta 2/2 na liniji 51
INFO  14:00:19,289 - Print calls = 4
ERROR 14:00:19,290 - Parsiranje NIJE uspesno zavrseno!
