INFO  15:20:22,525 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\test\program.mj
INFO  15:20:22,587 - #13 program
INFO  15:20:22,587 - #45 P
INFO  15:20:22,587 - #45 int
INFO  15:20:22,587 - #45 a
INFO  15:20:22,587 - #7 ;
INFO  15:20:22,587 - #45 bool
INFO  15:20:22,587 - #45 prom
INFO  15:20:22,587 - #7 ;
INFO  15:20:22,587 - #45 int
INFO  15:20:22,587 - #45 nizz
INFO  15:20:22,587 - #36 [
INFO  15:20:22,587 - #37 ]
INFO  15:20:22,587 - #7 ;
INFO  15:20:22,587 - #45 char
INFO  15:20:22,587 - #45 c
INFO  15:20:22,587 - #7 ;
INFO  15:20:22,587 - #17 const
INFO  15:20:22,587 - #45 int
INFO  15:20:22,587 - #45 kons
INFO  15:20:22,587 - #6 =
INFO  15:20:22,587 - #42 5
INFO  15:20:22,587 - #12 ,
INFO  15:20:22,603 - #45 kon2
INFO  15:20:22,603 - #6 =
INFO  15:20:22,603 - #42 7
INFO  15:20:22,603 - #7 ;
INFO  15:20:22,603 - #11 {
INFO  15:20:22,603 - #45 int
INFO  15:20:22,603 - #45 f
INFO  15:20:22,603 - #10 (
INFO  15:20:22,603 - #5 )
INFO  15:20:22,603 - #11 {
INFO  15:20:22,603 - #8 return
INFO  15:20:22,603 - #42 4
INFO  15:20:22,603 - #7 ;
INFO  15:20:22,603 - #4 }
INFO  15:20:22,603 - #45 int
INFO  15:20:22,603 - #45 myfun
INFO  15:20:22,603 - #10 (
INFO  15:20:22,603 - #45 int
INFO  15:20:22,603 - #45 abv
INFO  15:20:22,603 - #12 ,
INFO  15:20:22,603 - #45 int
INFO  15:20:22,603 - #45 myarg
INFO  15:20:22,603 - #5 )
INFO  15:20:22,603 - #11 {
INFO  15:20:22,603 - #45 myarg
INFO  15:20:22,603 - #22 ++
INFO  15:20:22,603 - #7 ;
INFO  15:20:22,603 - #8 return
INFO  15:20:22,603 - #45 myarg
INFO  15:20:22,603 - #7 ;
INFO  15:20:22,603 - #4 }
INFO  15:20:22,603 - #45 char
INFO  15:20:22,603 - #45 o
INFO  15:20:22,603 - #10 (
INFO  15:20:22,603 - #5 )
INFO  15:20:22,603 - #45 int
INFO  15:20:22,603 - #45 p
INFO  15:20:22,603 - #7 ;
INFO  15:20:22,603 - #11 {
INFO  15:20:22,603 - #8 return
INFO  15:20:22,603 - #44 a
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #4 }
INFO  15:20:22,618 - #45 bool
INFO  15:20:22,618 - #45 b
INFO  15:20:22,618 - #10 (
INFO  15:20:22,618 - #5 )
INFO  15:20:22,618 - #11 {
INFO  15:20:22,618 - #8 return
INFO  15:20:22,618 - #43 true
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #4 }
INFO  15:20:22,618 - #45 int
INFO  15:20:22,618 - #45 k
INFO  15:20:22,618 - #10 (
INFO  15:20:22,618 - #45 int
INFO  15:20:22,618 - #45 p
INFO  15:20:22,618 - #12 ,
INFO  15:20:22,618 - #45 int
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #12 ,
INFO  15:20:22,618 - #45 char
INFO  15:20:22,618 - #45 z
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #5 )
INFO  15:20:22,618 - #45 int
INFO  15:20:22,618 - #45 x
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #11 {
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #6 =
INFO  15:20:22,618 - #45 null
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #42 1
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #6 =
INFO  15:20:22,618 - #42 5
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #45 x
INFO  15:20:22,618 - #6 =
INFO  15:20:22,618 - #24 -
INFO  15:20:22,618 - #42 5
INFO  15:20:22,618 - #3 +
INFO  15:20:22,618 - #42 15
INFO  15:20:22,618 - #25 *
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #42 3
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #45 x
INFO  15:20:22,618 - #6 =
INFO  15:20:22,618 - #24 -
INFO  15:20:22,618 - #45 p
INFO  15:20:22,618 - #25 *
INFO  15:20:22,618 - #42 12
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #45 p
INFO  15:20:22,618 - #6 =
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #42 3
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #45 c
INFO  15:20:22,618 - #6 =
INFO  15:20:22,618 - #45 z
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #42 3
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #42 3
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #6 =
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #42 3
INFO  15:20:22,618 - #37 ]
INFO  15:20:22,618 - #3 +
INFO  15:20:22,618 - #42 5
INFO  15:20:22,618 - #7 ;
INFO  15:20:22,618 - #45 q
INFO  15:20:22,618 - #36 [
INFO  15:20:22,618 - #42 3
INFO  15:20:22,634 - #37 ]
INFO  15:20:22,634 - #6 =
INFO  15:20:22,634 - #42 5
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #14 print
INFO  15:20:22,634 - #10 (
INFO  15:20:22,634 - #45 q
INFO  15:20:22,634 - #36 [
INFO  15:20:22,634 - #45 a
INFO  15:20:22,634 - #3 +
INFO  15:20:22,634 - #42 1
INFO  15:20:22,634 - #37 ]
INFO  15:20:22,634 - #5 )
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #14 print
INFO  15:20:22,634 - #10 (
INFO  15:20:22,634 - #45 x
INFO  15:20:22,634 - #5 )
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #14 print
INFO  15:20:22,634 - #10 (
INFO  15:20:22,634 - #45 x
INFO  15:20:22,634 - #3 +
INFO  15:20:22,634 - #42 12
INFO  15:20:22,634 - #12 ,
INFO  15:20:22,634 - #42 1
INFO  15:20:22,634 - #5 )
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #19 read
INFO  15:20:22,634 - #10 (
INFO  15:20:22,634 - #45 q
INFO  15:20:22,634 - #36 [
INFO  15:20:22,634 - #42 1
INFO  15:20:22,634 - #37 ]
INFO  15:20:22,634 - #5 )
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #45 q
INFO  15:20:22,634 - #36 [
INFO  15:20:22,634 - #42 0
INFO  15:20:22,634 - #37 ]
INFO  15:20:22,634 - #23 --
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #45 x
INFO  15:20:22,634 - #23 --
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #45 prom
INFO  15:20:22,634 - #6 =
INFO  15:20:22,634 - #43 true
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #45 a
INFO  15:20:22,634 - #6 =
INFO  15:20:22,634 - #45 q
INFO  15:20:22,634 - #36 [
INFO  15:20:22,634 - #45 a
INFO  15:20:22,634 - #37 ]
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #45 a
INFO  15:20:22,634 - #6 =
INFO  15:20:22,634 - #45 q
INFO  15:20:22,634 - #36 [
INFO  15:20:22,634 - #42 1
INFO  15:20:22,634 - #37 ]
INFO  15:20:22,634 - #3 +
INFO  15:20:22,634 - #45 q
INFO  15:20:22,634 - #36 [
INFO  15:20:22,634 - #42 2
INFO  15:20:22,634 - #37 ]
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #8 return
INFO  15:20:22,634 - #42 5
INFO  15:20:22,634 - #3 +
INFO  15:20:22,634 - #42 1
INFO  15:20:22,634 - #3 +
INFO  15:20:22,634 - #42 2
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #4 }
INFO  15:20:22,634 - #15 void
INFO  15:20:22,634 - #45 main
INFO  15:20:22,634 - #10 (
INFO  15:20:22,634 - #5 )
INFO  15:20:22,634 - #11 {
INFO  15:20:22,634 - #20 for
INFO  15:20:22,634 - #10 (
INFO  15:20:22,634 - #45 a
INFO  15:20:22,634 - #6 =
INFO  15:20:22,634 - #42 0
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #45 a
INFO  15:20:22,634 - #34 <
INFO  15:20:22,634 - #42 5
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,634 - #45 a
INFO  15:20:22,634 - #22 ++
INFO  15:20:22,634 - #5 )
INFO  15:20:22,634 - #11 {
INFO  15:20:22,634 - #20 for
INFO  15:20:22,634 - #10 (
INFO  15:20:22,634 - #7 ;
INFO  15:20:22,650 - #7 ;
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #11 {
INFO  15:20:22,650 - #4 }
INFO  15:20:22,650 - #4 }
INFO  15:20:22,650 - #14 print
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #45 b
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #12 ,
INFO  15:20:22,650 - #42 2
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #7 ;
INFO  15:20:22,650 - #45 myfun
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #42 1
INFO  15:20:22,650 - #12 ,
INFO  15:20:22,650 - #45 myfun
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #42 1
INFO  15:20:22,650 - #12 ,
INFO  15:20:22,650 - #42 1
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #7 ;
INFO  15:20:22,650 - #45 myfun
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #42 1
INFO  15:20:22,650 - #12 ,
INFO  15:20:22,650 - #45 f
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #7 ;
INFO  15:20:22,650 - #9 if
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #43 true
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #11 {
INFO  15:20:22,650 - #4 }
INFO  15:20:22,650 - #2 else
INFO  15:20:22,650 - #9 if
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #45 a
INFO  15:20:22,650 - #30 ==
INFO  15:20:22,650 - #42 0
INFO  15:20:22,650 - #28 &&
INFO  15:20:22,650 - #43 true
INFO  15:20:22,650 - #31 !=
INFO  15:20:22,650 - #43 true
INFO  15:20:22,650 - #28 &&
INFO  15:20:22,650 - #45 b
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #11 {
INFO  15:20:22,650 - #45 a
INFO  15:20:22,650 - #22 ++
INFO  15:20:22,650 - #7 ;
INFO  15:20:22,650 - #4 }
INFO  15:20:22,650 - #2 else
INFO  15:20:22,650 - #9 if
INFO  15:20:22,650 - #10 (
INFO  15:20:22,650 - #45 nizz
INFO  15:20:22,650 - #30 ==
INFO  15:20:22,650 - #45 nizz
INFO  15:20:22,650 - #5 )
INFO  15:20:22,650 - #11 {
INFO  15:20:22,650 - #8 return
INFO  15:20:22,650 - #7 ;
INFO  15:20:22,650 - #4 }
INFO  15:20:22,650 - #2 else
INFO  15:20:22,665 - #11 {
INFO  15:20:22,665 - #4 }
INFO  15:20:22,665 - #4 }
INFO  15:20:22,665 - #4 }
INFO  15:20:22,665 - Print calls = 4
INFO  15:20:22,665 - Generating bytecode file: D:\Trenutni pp\workspace\MJCompiler\test\program.obj
INFO  15:20:22,681 - Parsiranje uspesno zavrseno!
