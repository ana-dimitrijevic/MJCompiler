INFO  13:50:44,924 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\unit tests\functionsTest.mj
INFO  13:50:45,017 - #13 program
INFO  13:50:45,018 - #45 MJProgram
INFO  13:50:45,023 - #45 int
INFO  13:50:45,028 - #45 a
INFO  13:50:45,030 - #12 ,
INFO  13:50:45,031 - #45 b
INFO  13:50:45,031 - #7 ;
INFO  13:50:45,032 - #45 char
INFO  13:50:45,032 - #45 arr
INFO  13:50:45,033 - #36 [
INFO  13:50:45,033 - #37 ]
INFO  13:50:45,033 - #7 ;
INFO  13:50:45,033 - #11 {
INFO  13:50:45,034 - #15 void
INFO  13:50:45,035 - #45 fun
INFO  13:50:45,035 - #10 (
INFO  13:50:45,036 - #5 )
INFO  13:50:45,038 - #45 char
INFO  13:50:45,039 - #45 c
INFO  13:50:45,040 - #7 ;
INFO  13:50:45,040 - #11 {
INFO  13:50:45,040 - #14 print
INFO  13:50:45,042 - #10 (
INFO  13:50:45,043 - #44 f
INFO  13:50:45,043 - #5 )
INFO  13:50:45,044 - #7 ;
INFO  13:50:45,044 - #14 print
INFO  13:50:45,044 - #10 (
INFO  13:50:45,044 - #44 u
INFO  13:50:45,044 - #5 )
INFO  13:50:45,045 - #7 ;
INFO  13:50:45,045 - #14 print
INFO  13:50:45,045 - #10 (
INFO  13:50:45,045 - #44 n
INFO  13:50:45,045 - #5 )
INFO  13:50:45,045 - #7 ;
INFO  13:50:45,045 - #8 return
INFO  13:50:45,045 - #7 ;
INFO  13:50:45,045 - #4 }
INFO  13:50:45,046 - #45 bool
INFO  13:50:45,047 - #45 fun2
INFO  13:50:45,047 - #10 (
INFO  13:50:45,047 - #45 int
INFO  13:50:45,047 - #45 a
INFO  13:50:45,047 - #12 ,
INFO  13:50:45,048 - #45 int
INFO  13:50:45,048 - #45 b
INFO  13:50:45,048 - #5 )
INFO  13:50:45,048 - #45 int
INFO  13:50:45,048 - #45 sum
INFO  13:50:45,049 - #7 ;
INFO  13:50:45,049 - #11 {
INFO  13:50:45,049 - #9 if
INFO  13:50:45,049 - #10 (
INFO  13:50:45,050 - #10 (
INFO  13:50:45,051 - #45 a
INFO  13:50:45,051 - #3 +
INFO  13:50:45,052 - #45 b
INFO  13:50:45,053 - #5 )
INFO  13:50:45,060 - #32 >
INFO  13:50:45,060 - #42 10
INFO  13:50:45,061 - #5 )
INFO  13:50:45,063 - #11 {
INFO  13:50:45,064 - #45 sum
INFO  13:50:45,064 - #6 =
INFO  13:50:45,064 - #45 a
INFO  13:50:45,064 - #3 +
INFO  13:50:45,064 - #45 b
INFO  13:50:45,064 - #7 ;
INFO  13:50:45,065 - #14 print
INFO  13:50:45,065 - #10 (
INFO  13:50:45,065 - #45 sum
INFO  13:50:45,065 - #5 )
INFO  13:50:45,065 - #7 ;
INFO  13:50:45,066 - #8 return
INFO  13:50:45,066 - #43 true
INFO  13:50:45,066 - #7 ;
INFO  13:50:45,066 - #4 }
INFO  13:50:45,066 - #2 else
INFO  13:50:45,067 - #11 {
INFO  13:50:45,067 - #8 return
INFO  13:50:45,067 - #43 false
INFO  13:50:45,068 - #7 ;
INFO  13:50:45,069 - #4 }
INFO  13:50:45,069 - #4 }
INFO  13:50:45,070 - #15 void
INFO  13:50:45,070 - #45 main
INFO  13:50:45,071 - #10 (
INFO  13:50:45,071 - #5 )
INFO  13:50:45,071 - #45 int
INFO  13:50:45,071 - #45 i
INFO  13:50:45,071 - #7 ;
INFO  13:50:45,071 - #11 {
INFO  13:50:45,071 - #45 arr
INFO  13:50:45,071 - #6 =
INFO  13:50:45,072 - #18 new
INFO  13:50:45,072 - #45 char
INFO  13:50:45,072 - #36 [
INFO  13:50:45,072 - #42 4
INFO  13:50:45,072 - #37 ]
INFO  13:50:45,072 - #7 ;
INFO  13:50:45,073 - #45 arr
INFO  13:50:45,073 - #36 [
INFO  13:50:45,073 - #42 0
INFO  13:50:45,073 - #37 ]
INFO  13:50:45,073 - #6 =
INFO  13:50:45,074 - #44 a
INFO  13:50:45,074 - #7 ;
INFO  13:50:45,074 - #9 if
INFO  13:50:45,074 - #10 (
INFO  13:50:45,074 - #45 fun2
INFO  13:50:45,074 - #10 (
INFO  13:50:45,076 - #42 6
INFO  13:50:45,076 - #12 ,
INFO  13:50:45,077 - #42 6
INFO  13:50:45,077 - #5 )
INFO  13:50:45,077 - #5 )
INFO  13:50:45,078 - #11 {
INFO  13:50:45,079 - #45 i
INFO  13:50:45,079 - #6 =
INFO  13:50:45,079 - #42 0
INFO  13:50:45,080 - #7 ;
INFO  13:50:45,080 - #20 for
INFO  13:50:45,080 - #10 (
INFO  13:50:45,082 - #7 ;
INFO  13:50:45,083 - #45 i
INFO  13:50:45,084 - #34 <
INFO  13:50:45,084 - #42 3
INFO  13:50:45,085 - #7 ;
INFO  13:50:45,085 - #45 i
INFO  13:50:45,086 - #22 ++
INFO  13:50:45,086 - #5 )
INFO  13:50:45,087 - #11 {
INFO  13:50:45,087 - #45 fun
INFO  13:50:45,088 - #10 (
INFO  13:50:45,089 - #5 )
INFO  13:50:45,089 - #7 ;
INFO  13:50:45,090 - #4 }
INFO  13:50:45,090 - #4 }
INFO  13:50:45,091 - #45 funn
INFO  13:50:45,091 - #10 (
INFO  13:50:45,092 - #5 )
INFO  13:50:45,092 - #7 ;
INFO  13:50:45,092 - #45 i
INFO  13:50:45,092 - #10 (
INFO  13:50:45,092 - #5 )
INFO  13:50:45,092 - #7 ;
INFO  13:50:45,092 - #45 fun
INFO  13:50:45,092 - #10 (
INFO  13:50:45,092 - #42 3
INFO  13:50:45,093 - #5 )
INFO  13:50:45,093 - #7 ;
INFO  13:50:45,093 - #45 fun2
INFO  13:50:45,093 - #10 (
INFO  13:50:45,093 - #42 1
INFO  13:50:45,093 - #12 ,
INFO  13:50:45,093 - #44 a
INFO  13:50:45,093 - #5 )
INFO  13:50:45,093 - #7 ;
INFO  13:50:45,094 - #4 }
INFO  13:50:45,094 - #4 }
ERROR 13:50:45,110 - Greska: funn nije deklarisano!  na liniji 42
ERROR 13:50:45,110 - Dezignator imena i nije metoda  na liniji 43
ERROR 13:50:45,110 - Greska: Ocekivano 0 argumenata, a pri pozivu prosledjeno 1 na liniji 44
INFO  13:50:45,110 - Print calls = 4
INFO  13:50:45,111 - Generating bytecode file: D:\Trenutni pp\workspace\MJCompiler\test\program.obj
INFO  13:50:45,117 - Parsiranje uspesno zavrseno!
