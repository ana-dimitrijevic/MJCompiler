INFO  20:31:05,322 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\test\program.mj
INFO  20:31:05,405 - #13 program
INFO  20:31:05,406 - #45 P
INFO  20:31:05,406 - #45 int
INFO  20:31:05,407 - #45 a
INFO  20:31:05,408 - #7 ;
INFO  20:31:05,409 - #45 bool
INFO  20:31:05,409 - #45 prom
INFO  20:31:05,409 - #7 ;
INFO  20:31:05,409 - #45 int
INFO  20:31:05,409 - #45 nizz
INFO  20:31:05,410 - #36 [
INFO  20:31:05,410 - #37 ]
INFO  20:31:05,410 - #7 ;
INFO  20:31:05,410 - #45 bool
INFO  20:31:05,411 - #45 nizbool
INFO  20:31:05,411 - #36 [
INFO  20:31:05,412 - #37 ]
INFO  20:31:05,412 - #7 ;
INFO  20:31:05,412 - #45 char
INFO  20:31:05,412 - #45 nizchar
INFO  20:31:05,412 - #36 [
INFO  20:31:05,412 - #37 ]
INFO  20:31:05,413 - #7 ;
INFO  20:31:05,413 - #45 char
INFO  20:31:05,413 - #45 c
INFO  20:31:05,413 - #7 ;
INFO  20:31:05,413 - #17 const
INFO  20:31:05,413 - #45 int
INFO  20:31:05,413 - #45 kons
INFO  20:31:05,413 - #6 =
INFO  20:31:05,414 - #42 5
INFO  20:31:05,414 - #12 ,
INFO  20:31:05,414 - #45 kon2
INFO  20:31:05,414 - #6 =
INFO  20:31:05,414 - #42 7
INFO  20:31:05,414 - #7 ;
INFO  20:31:05,415 - #11 {
INFO  20:31:05,415 - #45 int
INFO  20:31:05,415 - #45 f
INFO  20:31:05,416 - #10 (
INFO  20:31:05,417 - #5 )
INFO  20:31:05,418 - #11 {
INFO  20:31:05,419 - #8 return
INFO  20:31:05,419 - #42 4
INFO  20:31:05,420 - #7 ;
INFO  20:31:05,420 - #4 }
INFO  20:31:05,420 - #15 void
INFO  20:31:05,421 - #45 charfun
INFO  20:31:05,422 - #10 (
INFO  20:31:05,422 - #45 char
INFO  20:31:05,422 - #45 car
INFO  20:31:05,422 - #5 )
INFO  20:31:05,423 - #11 {
INFO  20:31:05,424 - #4 }
INFO  20:31:05,424 - #45 int
INFO  20:31:05,424 - #45 myfun
INFO  20:31:05,424 - #10 (
INFO  20:31:05,424 - #45 int
INFO  20:31:05,424 - #45 abv
INFO  20:31:05,424 - #12 ,
INFO  20:31:05,425 - #45 int
INFO  20:31:05,425 - #45 myarg
INFO  20:31:05,425 - #5 )
INFO  20:31:05,425 - #11 {
INFO  20:31:05,425 - #45 myarg
INFO  20:31:05,426 - #22 ++
INFO  20:31:05,426 - #7 ;
INFO  20:31:05,427 - #8 return
INFO  20:31:05,427 - #45 myarg
INFO  20:31:05,427 - #7 ;
INFO  20:31:05,427 - #4 }
INFO  20:31:05,427 - #45 char
INFO  20:31:05,427 - #45 o
INFO  20:31:05,427 - #10 (
INFO  20:31:05,428 - #5 )
INFO  20:31:05,428 - #45 int
INFO  20:31:05,428 - #45 p
INFO  20:31:05,428 - #7 ;
INFO  20:31:05,428 - #11 {
INFO  20:31:05,428 - #8 return
INFO  20:31:05,428 - #44 a
INFO  20:31:05,428 - #7 ;
INFO  20:31:05,428 - #4 }
INFO  20:31:05,429 - #45 bool
INFO  20:31:05,429 - #45 b
INFO  20:31:05,429 - #10 (
INFO  20:31:05,429 - #45 bool
INFO  20:31:05,429 - #45 bulijan
INFO  20:31:05,429 - #5 )
INFO  20:31:05,430 - #11 {
INFO  20:31:05,430 - #8 return
INFO  20:31:05,431 - #43 true
INFO  20:31:05,431 - #7 ;
INFO  20:31:05,431 - #4 }
INFO  20:31:05,431 - #45 int
INFO  20:31:05,431 - #45 k
INFO  20:31:05,432 - #10 (
INFO  20:31:05,432 - #45 int
INFO  20:31:05,432 - #45 p
INFO  20:31:05,432 - #12 ,
INFO  20:31:05,432 - #45 int
INFO  20:31:05,432 - #45 q
INFO  20:31:05,432 - #36 [
INFO  20:31:05,432 - #37 ]
INFO  20:31:05,432 - #12 ,
INFO  20:31:05,433 - #45 char
INFO  20:31:05,433 - #45 z
INFO  20:31:05,433 - #36 [
INFO  20:31:05,433 - #37 ]
INFO  20:31:05,433 - #5 )
INFO  20:31:05,433 - #45 int
INFO  20:31:05,433 - #45 x
INFO  20:31:05,433 - #7 ;
INFO  20:31:05,433 - #11 {
INFO  20:31:05,433 - #14 print
INFO  20:31:05,434 - #10 (
INFO  20:31:05,434 - #45 q
INFO  20:31:05,434 - #36 [
INFO  20:31:05,434 - #42 0
INFO  20:31:05,434 - #37 ]
INFO  20:31:05,434 - #12 ,
INFO  20:31:05,434 - #42 2
INFO  20:31:05,434 - #5 )
INFO  20:31:05,440 - #7 ;
INFO  20:31:05,441 - #45 nizz
INFO  20:31:05,441 - #6 =
INFO  20:31:05,441 - #45 null
INFO  20:31:05,442 - #7 ;
INFO  20:31:05,443 - #45 q
INFO  20:31:05,443 - #6 =
INFO  20:31:05,443 - #45 null
INFO  20:31:05,443 - #7 ;
INFO  20:31:05,443 - #45 nizz
INFO  20:31:05,443 - #6 =
INFO  20:31:05,443 - #45 q
INFO  20:31:05,443 - #7 ;
INFO  20:31:05,443 - #45 q
INFO  20:31:05,444 - #36 [
INFO  20:31:05,444 - #45 q
INFO  20:31:05,444 - #36 [
INFO  20:31:05,445 - #42 1
INFO  20:31:05,445 - #37 ]
INFO  20:31:05,445 - #37 ]
INFO  20:31:05,445 - #6 =
INFO  20:31:05,445 - #42 5
INFO  20:31:05,445 - #7 ;
INFO  20:31:05,445 - #45 x
INFO  20:31:05,445 - #6 =
INFO  20:31:05,445 - #24 -
INFO  20:31:05,445 - #42 5
INFO  20:31:05,446 - #3 +
INFO  20:31:05,446 - #42 15
INFO  20:31:05,447 - #25 *
INFO  20:31:05,448 - #45 q
INFO  20:31:05,449 - #36 [
INFO  20:31:05,449 - #42 3
INFO  20:31:05,449 - #37 ]
INFO  20:31:05,449 - #7 ;
INFO  20:31:05,450 - #45 x
INFO  20:31:05,450 - #6 =
INFO  20:31:05,450 - #24 -
INFO  20:31:05,450 - #45 p
INFO  20:31:05,450 - #25 *
INFO  20:31:05,451 - #42 12
INFO  20:31:05,451 - #7 ;
INFO  20:31:05,451 - #45 p
INFO  20:31:05,451 - #6 =
INFO  20:31:05,451 - #45 q
INFO  20:31:05,451 - #36 [
INFO  20:31:05,451 - #42 3
INFO  20:31:05,451 - #37 ]
INFO  20:31:05,451 - #7 ;
INFO  20:31:05,452 - #45 c
INFO  20:31:05,452 - #6 =
INFO  20:31:05,452 - #45 z
INFO  20:31:05,452 - #36 [
INFO  20:31:05,452 - #42 3
INFO  20:31:05,452 - #37 ]
INFO  20:31:05,452 - #7 ;
INFO  20:31:05,452 - #45 q
INFO  20:31:05,452 - #36 [
INFO  20:31:05,452 - #42 3
INFO  20:31:05,452 - #37 ]
INFO  20:31:05,452 - #6 =
INFO  20:31:05,452 - #45 q
INFO  20:31:05,452 - #36 [
INFO  20:31:05,453 - #42 3
INFO  20:31:05,453 - #37 ]
INFO  20:31:05,453 - #3 +
INFO  20:31:05,453 - #42 5
INFO  20:31:05,453 - #7 ;
INFO  20:31:05,453 - #45 q
INFO  20:31:05,453 - #36 [
INFO  20:31:05,453 - #42 3
INFO  20:31:05,453 - #37 ]
INFO  20:31:05,453 - #6 =
INFO  20:31:05,453 - #42 5
INFO  20:31:05,453 - #7 ;
INFO  20:31:05,453 - #14 print
INFO  20:31:05,453 - #10 (
INFO  20:31:05,453 - #45 q
INFO  20:31:05,453 - #36 [
INFO  20:31:05,454 - #45 a
INFO  20:31:05,454 - #3 +
INFO  20:31:05,454 - #42 1
INFO  20:31:05,454 - #37 ]
INFO  20:31:05,454 - #5 )
INFO  20:31:05,454 - #7 ;
INFO  20:31:05,454 - #14 print
INFO  20:31:05,454 - #10 (
INFO  20:31:05,454 - #45 x
INFO  20:31:05,454 - #5 )
INFO  20:31:05,454 - #7 ;
INFO  20:31:05,454 - #14 print
INFO  20:31:05,454 - #10 (
INFO  20:31:05,454 - #45 x
INFO  20:31:05,454 - #3 +
INFO  20:31:05,454 - #42 12
INFO  20:31:05,454 - #12 ,
INFO  20:31:05,454 - #42 1
INFO  20:31:05,455 - #5 )
INFO  20:31:05,455 - #7 ;
INFO  20:31:05,455 - #19 read
INFO  20:31:05,455 - #10 (
INFO  20:31:05,455 - #45 q
INFO  20:31:05,455 - #36 [
INFO  20:31:05,455 - #42 1
INFO  20:31:05,455 - #37 ]
INFO  20:31:05,455 - #5 )
INFO  20:31:05,455 - #7 ;
INFO  20:31:05,455 - #45 q
INFO  20:31:05,455 - #36 [
INFO  20:31:05,455 - #42 0
INFO  20:31:05,455 - #37 ]
INFO  20:31:05,455 - #23 --
INFO  20:31:05,455 - #7 ;
INFO  20:31:05,455 - #45 x
INFO  20:31:05,456 - #23 --
INFO  20:31:05,456 - #7 ;
INFO  20:31:05,456 - #45 q
INFO  20:31:05,456 - #36 [
INFO  20:31:05,456 - #42 3
INFO  20:31:05,456 - #37 ]
INFO  20:31:05,456 - #6 =
INFO  20:31:05,456 - #45 f
INFO  20:31:05,456 - #10 (
INFO  20:31:05,457 - #5 )
INFO  20:31:05,458 - #3 +
INFO  20:31:05,458 - #42 3
INFO  20:31:05,458 - #3 +
INFO  20:31:05,458 - #45 q
INFO  20:31:05,458 - #36 [
INFO  20:31:05,458 - #42 1
INFO  20:31:05,458 - #37 ]
INFO  20:31:05,458 - #3 +
INFO  20:31:05,459 - #45 x
INFO  20:31:05,459 - #7 ;
INFO  20:31:05,459 - #45 prom
INFO  20:31:05,459 - #6 =
INFO  20:31:05,459 - #43 true
INFO  20:31:05,459 - #7 ;
INFO  20:31:05,459 - #45 a
INFO  20:31:05,459 - #6 =
INFO  20:31:05,459 - #45 q
INFO  20:31:05,459 - #36 [
INFO  20:31:05,459 - #45 a
INFO  20:31:05,459 - #37 ]
INFO  20:31:05,459 - #7 ;
INFO  20:31:05,459 - #45 a
INFO  20:31:05,459 - #6 =
INFO  20:31:05,459 - #45 q
INFO  20:31:05,459 - #36 [
INFO  20:31:05,460 - #42 1
INFO  20:31:05,460 - #37 ]
INFO  20:31:05,460 - #3 +
INFO  20:31:05,460 - #45 q
INFO  20:31:05,460 - #36 [
INFO  20:31:05,460 - #42 2
INFO  20:31:05,460 - #37 ]
INFO  20:31:05,460 - #7 ;
INFO  20:31:05,460 - #8 return
INFO  20:31:05,460 - #42 5
INFO  20:31:05,460 - #3 +
INFO  20:31:05,460 - #42 1
INFO  20:31:05,461 - #3 +
INFO  20:31:05,461 - #42 2
INFO  20:31:05,461 - #7 ;
INFO  20:31:05,461 - #4 }
INFO  20:31:05,461 - #15 void
INFO  20:31:05,461 - #45 nova
INFO  20:31:05,461 - #10 (
INFO  20:31:05,461 - #45 int
INFO  20:31:05,462 - #45 p
INFO  20:31:05,462 - #36 [
INFO  20:31:05,462 - #37 ]
INFO  20:31:05,462 - #12 ,
INFO  20:31:05,462 - #45 char
INFO  20:31:05,462 - #45 a
INFO  20:31:05,462 - #36 [
INFO  20:31:05,462 - #37 ]
INFO  20:31:05,462 - #12 ,
INFO  20:31:05,462 - #45 bool
INFO  20:31:05,462 - #45 b
INFO  20:31:05,462 - #36 [
INFO  20:31:05,462 - #37 ]
INFO  20:31:05,462 - #5 )
INFO  20:31:05,463 - #11 {
INFO  20:31:05,463 - #4 }
INFO  20:31:05,463 - #15 void
INFO  20:31:05,463 - #45 main
INFO  20:31:05,463 - #10 (
INFO  20:31:05,463 - #5 )
INFO  20:31:05,463 - #11 {
INFO  20:31:05,463 - #45 nizz
INFO  20:31:05,463 - #6 =
INFO  20:31:05,463 - #6 =
ERROR 20:31:05,463 - 
Sintaksna greska na liniji 128
INFO  20:31:05,463 - #18 new
INFO  20:31:05,463 - #45 int
INFO  20:31:05,464 - #36 [
INFO  20:31:05,465 - #42 5
INFO  20:31:05,465 - #37 ]
INFO  20:31:05,465 - #7 ;
INFO  20:31:05,465 - #45 nova
INFO  20:31:05,465 - #10 (
INFO  20:31:05,465 - #45 nizz
INFO  20:31:05,465 - assign statement error recovery: successful
INFO  20:31:05,467 - #12 ,
INFO  20:31:05,467 - #45 nizchar
INFO  20:31:05,467 - #12 ,
INFO  20:31:05,467 - #45 nizbool
INFO  20:31:05,467 - #5 )
INFO  20:31:05,468 - #7 ;
INFO  20:31:05,468 - #45 charfun
INFO  20:31:05,468 - #10 (
INFO  20:31:05,468 - #45 nizchar
INFO  20:31:05,468 - #36 [
INFO  20:31:05,468 - #42 0
INFO  20:31:05,468 - #37 ]
INFO  20:31:05,468 - #5 )
INFO  20:31:05,468 - #7 ;
INFO  20:31:05,468 - #45 myfun
INFO  20:31:05,468 - #10 (
INFO  20:31:05,468 - #45 nizz
INFO  20:31:05,468 - #36 [
INFO  20:31:05,468 - #42 0
INFO  20:31:05,468 - #37 ]
INFO  20:31:05,468 - #12 ,
INFO  20:31:05,468 - #45 nizz
INFO  20:31:05,468 - #36 [
INFO  20:31:05,468 - #42 0
INFO  20:31:05,468 - #37 ]
INFO  20:31:05,468 - #5 )
INFO  20:31:05,468 - #7 ;
INFO  20:31:05,469 - #20 for
INFO  20:31:05,469 - #10 (
INFO  20:31:05,469 - #45 a
INFO  20:31:05,469 - #6 =
INFO  20:31:05,470 - #42 0
INFO  20:31:05,470 - #7 ;
INFO  20:31:05,470 - #45 a
INFO  20:31:05,470 - #34 <
INFO  20:31:05,470 - #42 5
INFO  20:31:05,471 - #7 ;
INFO  20:31:05,471 - #45 a
INFO  20:31:05,472 - #22 ++
INFO  20:31:05,472 - #5 )
INFO  20:31:05,472 - #11 {
INFO  20:31:05,472 - #20 for
INFO  20:31:05,472 - #10 (
INFO  20:31:05,472 - #7 ;
INFO  20:31:05,472 - #7 ;
INFO  20:31:05,473 - #5 )
INFO  20:31:05,473 - #11 {
INFO  20:31:05,473 - #4 }
INFO  20:31:05,473 - #4 }
INFO  20:31:05,473 - #45 nizz
INFO  20:31:05,473 - #6 =
INFO  20:31:05,473 - #45 nizz
INFO  20:31:05,474 - #7 ;
INFO  20:31:05,474 - #14 print
INFO  20:31:05,474 - #10 (
INFO  20:31:05,474 - #45 nizz
INFO  20:31:05,474 - #36 [
INFO  20:31:05,475 - #42 0
INFO  20:31:05,475 - #37 ]
INFO  20:31:05,475 - #12 ,
INFO  20:31:05,475 - #42 2
INFO  20:31:05,475 - #5 )
INFO  20:31:05,475 - #7 ;
INFO  20:31:05,476 - #14 print
INFO  20:31:05,476 - #10 (
INFO  20:31:05,476 - #45 b
INFO  20:31:05,476 - #10 (
INFO  20:31:05,476 - #45 nizbool
INFO  20:31:05,476 - #36 [
INFO  20:31:05,476 - #42 1
INFO  20:31:05,476 - #37 ]
INFO  20:31:05,476 - #5 )
INFO  20:31:05,476 - #12 ,
INFO  20:31:05,477 - #42 2
INFO  20:31:05,477 - #5 )
INFO  20:31:05,477 - #7 ;
INFO  20:31:05,477 - #45 myfun
INFO  20:31:05,477 - #10 (
INFO  20:31:05,477 - #42 1
INFO  20:31:05,477 - #12 ,
INFO  20:31:05,477 - #45 myfun
INFO  20:31:05,477 - #10 (
INFO  20:31:05,478 - #42 1
INFO  20:31:05,480 - #12 ,
INFO  20:31:05,480 - #42 1
INFO  20:31:05,481 - #5 )
INFO  20:31:05,481 - #5 )
INFO  20:31:05,481 - #7 ;
INFO  20:31:05,481 - #45 myfun
INFO  20:31:05,481 - #10 (
INFO  20:31:05,481 - #42 1
INFO  20:31:05,481 - #12 ,
INFO  20:31:05,481 - #45 f
INFO  20:31:05,481 - #10 (
INFO  20:31:05,481 - #5 )
INFO  20:31:05,481 - #5 )
INFO  20:31:05,481 - #7 ;
INFO  20:31:05,481 - #9 if
INFO  20:31:05,482 - #10 (
INFO  20:31:05,483 - #43 true
INFO  20:31:05,483 - #5 )
INFO  20:31:05,483 - #11 {
INFO  20:31:05,483 - #4 }
INFO  20:31:05,483 - #2 else
INFO  20:31:05,483 - #9 if
INFO  20:31:05,483 - #10 (
INFO  20:31:05,484 - #45 a
INFO  20:31:05,484 - #30 ==
INFO  20:31:05,484 - #42 0
INFO  20:31:05,484 - #28 &&
INFO  20:31:05,485 - #43 true
INFO  20:31:05,485 - #31 !=
INFO  20:31:05,485 - #43 true
INFO  20:31:05,486 - #28 &&
INFO  20:31:05,487 - #45 b
INFO  20:31:05,487 - #10 (
INFO  20:31:05,487 - #45 nizbool
INFO  20:31:05,487 - #36 [
INFO  20:31:05,487 - #42 1
INFO  20:31:05,487 - #37 ]
INFO  20:31:05,487 - #5 )
INFO  20:31:05,487 - #5 )
INFO  20:31:05,487 - #11 {
INFO  20:31:05,487 - #45 a
INFO  20:31:05,487 - #22 ++
INFO  20:31:05,487 - #7 ;
INFO  20:31:05,488 - #45 a
INFO  20:31:05,489 - #6 =
INFO  20:31:05,489 - #45 a
INFO  20:31:05,489 - #3 +
INFO  20:31:05,489 - #45 ord
INFO  20:31:05,489 - #10 (
INFO  20:31:05,489 - #44 a
INFO  20:31:05,490 - #5 )
INFO  20:31:05,490 - #7 ;
INFO  20:31:05,490 - #4 }
INFO  20:31:05,490 - #2 else
INFO  20:31:05,490 - #9 if
INFO  20:31:05,490 - #10 (
INFO  20:31:05,490 - #45 nizz
INFO  20:31:05,490 - #30 ==
INFO  20:31:05,491 - #45 nizz
INFO  20:31:05,491 - #5 )
INFO  20:31:05,491 - #11 {
INFO  20:31:05,491 - #8 return
INFO  20:31:05,491 - #7 ;
INFO  20:31:05,491 - #4 }
INFO  20:31:05,494 - #2 else
INFO  20:31:05,494 - #11 {
INFO  20:31:05,494 - #4 }
INFO  20:31:05,494 - #45 a
INFO  20:31:05,494 - #3 +
ERROR 20:31:05,495 - 
Sintaksna greska na liniji 177
INFO  20:31:05,495 - #6 =
INFO  20:31:05,495 - #42 1
INFO  20:31:05,495 - #7 ;
INFO  20:31:05,495 - #14 print
INFO  20:31:05,495 - #10 (
INFO  20:31:05,495 - #45 eol
INFO  20:31:05,495 - assign statement error recovery: successful
INFO  20:31:05,495 - #5 )
INFO  20:31:05,495 - #7 ;
INFO  20:31:05,496 - #45 charfun
INFO  20:31:05,496 - #10 (
INFO  20:31:05,496 - #45 chr
INFO  20:31:05,496 - #10 (
INFO  20:31:05,496 - #42 5
INFO  20:31:05,496 - #5 )
INFO  20:31:05,496 - #5 )
INFO  20:31:05,496 - #7 ;
INFO  20:31:05,496 - #4 }
INFO  20:31:05,496 - #4 }
INFO  20:31:05,533 - Print calls = 7
ERROR 20:31:05,534 - Parsiranje NIJE uspesno zavrseno!
