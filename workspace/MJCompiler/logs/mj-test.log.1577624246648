INFO  13:57:20,521 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\test\program.mj
INFO  13:57:20,599 - #13 program
INFO  13:57:20,599 - #45 P
INFO  13:57:20,599 - #45 int
INFO  13:57:20,615 - #45 a
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #45 bool
INFO  13:57:20,615 - #45 prom
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #45 char
INFO  13:57:20,615 - #45 c
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #17 const
INFO  13:57:20,615 - #45 int
INFO  13:57:20,615 - #45 kons
INFO  13:57:20,615 - #6 =
INFO  13:57:20,615 - #42 5
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #11 {
INFO  13:57:20,615 - #45 int
INFO  13:57:20,615 - #45 f
INFO  13:57:20,615 - #10 (
INFO  13:57:20,615 - #5 )
INFO  13:57:20,615 - #11 {
INFO  13:57:20,615 - #8 return
INFO  13:57:20,615 - #42 4
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #4 }
INFO  13:57:20,615 - #45 int
INFO  13:57:20,615 - #45 myfun
INFO  13:57:20,615 - #10 (
INFO  13:57:20,615 - #45 int
INFO  13:57:20,615 - #45 abv
INFO  13:57:20,615 - #12 ,
INFO  13:57:20,615 - #45 int
INFO  13:57:20,615 - #45 myarg
INFO  13:57:20,615 - #5 )
INFO  13:57:20,615 - #11 {
INFO  13:57:20,615 - #45 myarg
INFO  13:57:20,615 - #22 ++
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #8 return
INFO  13:57:20,615 - #45 myarg
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #4 }
INFO  13:57:20,615 - #45 char
INFO  13:57:20,615 - #45 o
INFO  13:57:20,615 - #10 (
INFO  13:57:20,615 - #5 )
INFO  13:57:20,615 - #45 int
INFO  13:57:20,615 - #45 p
INFO  13:57:20,615 - #7 ;
INFO  13:57:20,615 - #11 {
INFO  13:57:20,630 - #8 return
INFO  13:57:20,630 - #44 a
INFO  13:57:20,630 - #7 ;
INFO  13:57:20,661 - #4 }
INFO  13:57:20,661 - #45 int
INFO  13:57:20,661 - #45 k
INFO  13:57:20,661 - #10 (
INFO  13:57:20,677 - #45 int
INFO  13:57:20,677 - #45 p
INFO  13:57:20,677 - #12 ,
INFO  13:57:20,677 - #45 int
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #12 ,
INFO  13:57:20,677 - #45 char
INFO  13:57:20,677 - #45 z
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #5 )
INFO  13:57:20,677 - #45 int
INFO  13:57:20,677 - #45 x
INFO  13:57:20,677 - #7 ;
INFO  13:57:20,677 - #11 {
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #42 1
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #6 =
INFO  13:57:20,677 - #42 5
INFO  13:57:20,677 - #7 ;
INFO  13:57:20,677 - #45 x
INFO  13:57:20,677 - #6 =
INFO  13:57:20,677 - #24 -
INFO  13:57:20,677 - #42 5
INFO  13:57:20,677 - #3 +
INFO  13:57:20,677 - #42 15
INFO  13:57:20,677 - #25 *
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #42 3
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #7 ;
INFO  13:57:20,677 - #45 x
INFO  13:57:20,677 - #6 =
INFO  13:57:20,677 - #24 -
INFO  13:57:20,677 - #45 p
INFO  13:57:20,677 - #25 *
INFO  13:57:20,677 - #42 12
INFO  13:57:20,677 - #7 ;
INFO  13:57:20,677 - #45 p
INFO  13:57:20,677 - #6 =
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #42 3
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #7 ;
INFO  13:57:20,677 - #45 c
INFO  13:57:20,677 - #6 =
INFO  13:57:20,677 - #45 z
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #42 3
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #7 ;
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #42 3
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #6 =
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #42 3
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #3 +
INFO  13:57:20,677 - #42 5
INFO  13:57:20,677 - #7 ;
INFO  13:57:20,677 - #45 q
INFO  13:57:20,677 - #36 [
INFO  13:57:20,677 - #42 3
INFO  13:57:20,677 - #37 ]
INFO  13:57:20,677 - #6 =
INFO  13:57:20,693 - #42 5
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #14 print
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #45 q
INFO  13:57:20,693 - #36 [
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #3 +
INFO  13:57:20,693 - #42 1
INFO  13:57:20,693 - #37 ]
INFO  13:57:20,693 - #5 )
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #14 print
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #45 x
INFO  13:57:20,693 - #5 )
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #14 print
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #45 x
INFO  13:57:20,693 - #3 +
INFO  13:57:20,693 - #42 12
INFO  13:57:20,693 - #12 ,
INFO  13:57:20,693 - #42 1
INFO  13:57:20,693 - #5 )
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #19 read
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #45 q
INFO  13:57:20,693 - #36 [
INFO  13:57:20,693 - #42 1
INFO  13:57:20,693 - #37 ]
INFO  13:57:20,693 - #5 )
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #45 q
INFO  13:57:20,693 - #36 [
INFO  13:57:20,693 - #42 0
INFO  13:57:20,693 - #37 ]
INFO  13:57:20,693 - #23 --
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #45 x
INFO  13:57:20,693 - #23 --
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #45 prom
INFO  13:57:20,693 - #6 =
INFO  13:57:20,693 - #43 true
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #6 =
INFO  13:57:20,693 - #45 q
INFO  13:57:20,693 - #36 [
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #37 ]
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #6 =
INFO  13:57:20,693 - #45 q
INFO  13:57:20,693 - #36 [
INFO  13:57:20,693 - #42 1
INFO  13:57:20,693 - #37 ]
INFO  13:57:20,693 - #3 +
INFO  13:57:20,693 - #45 q
INFO  13:57:20,693 - #36 [
INFO  13:57:20,693 - #42 2
INFO  13:57:20,693 - #37 ]
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #8 return
INFO  13:57:20,693 - #42 5
INFO  13:57:20,693 - #3 +
INFO  13:57:20,693 - #42 1
INFO  13:57:20,693 - #3 +
INFO  13:57:20,693 - #42 2
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #4 }
INFO  13:57:20,693 - #15 void
INFO  13:57:20,693 - #45 main
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #5 )
INFO  13:57:20,693 - #11 {
INFO  13:57:20,693 - #20 for
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #6 =
INFO  13:57:20,693 - #42 0
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #34 <
INFO  13:57:20,693 - #42 5
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #22 ++
INFO  13:57:20,693 - #5 )
INFO  13:57:20,693 - #11 {
INFO  13:57:20,693 - #20 for
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #7 ;
INFO  13:57:20,693 - #5 )
INFO  13:57:20,693 - #11 {
INFO  13:57:20,693 - #4 }
INFO  13:57:20,693 - #4 }
INFO  13:57:20,693 - #14 print
INFO  13:57:20,693 - #10 (
INFO  13:57:20,693 - #45 a
INFO  13:57:20,693 - #12 ,
INFO  13:57:20,708 - #42 2
INFO  13:57:20,708 - #5 )
INFO  13:57:20,708 - #7 ;
INFO  13:57:20,708 - #45 myfun
INFO  13:57:20,708 - #10 (
INFO  13:57:20,708 - #42 1
INFO  13:57:20,708 - #12 ,
INFO  13:57:20,708 - #45 myfun
INFO  13:57:20,708 - #10 (
INFO  13:57:20,708 - #42 1
INFO  13:57:20,708 - #12 ,
INFO  13:57:20,708 - #42 1
INFO  13:57:20,708 - #5 )
INFO  13:57:20,708 - #5 )
INFO  13:57:20,708 - #7 ;
INFO  13:57:20,708 - #45 myfun
INFO  13:57:20,708 - #10 (
INFO  13:57:20,708 - #42 1
INFO  13:57:20,708 - #12 ,
INFO  13:57:20,708 - #45 f
INFO  13:57:20,708 - #10 (
INFO  13:57:20,708 - #5 )
INFO  13:57:20,708 - #5 )
INFO  13:57:20,708 - #7 ;
INFO  13:57:20,708 - #9 if
INFO  13:57:20,708 - #10 (
INFO  13:57:20,708 - #43 true
INFO  13:57:20,708 - #5 )
INFO  13:57:20,708 - #11 {
INFO  13:57:20,708 - #4 }
INFO  13:57:20,708 - #2 else
INFO  13:57:20,708 - #9 if
INFO  13:57:20,708 - #10 (
INFO  13:57:20,708 - #45 a
INFO  13:57:20,708 - #28 &&
INFO  13:57:20,708 - #42 0
INFO  13:57:20,708 - #5 )
INFO  13:57:20,708 - #11 {
INFO  13:57:20,708 - #45 a
INFO  13:57:20,708 - #22 ++
INFO  13:57:20,708 - #7 ;
INFO  13:57:20,708 - #4 }
INFO  13:57:20,708 - #4 }
INFO  13:57:20,708 - #4 }
ERROR 13:57:20,740 - Error: condition must be of type 'bool'. na liniji 124
ERROR 13:57:20,740 - Error: condition must be of type 'bool'. na liniji 124
INFO  13:57:20,740 - Print calls = 4
ERROR 13:57:20,740 - Parsiranje NIJE uspesno zavrseno!
