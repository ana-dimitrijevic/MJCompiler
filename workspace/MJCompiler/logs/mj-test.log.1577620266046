INFO  12:26:25,529 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\test\program.mj
INFO  12:26:26,022 - #13 program
INFO  12:26:26,022 - #45 P
INFO  12:26:26,022 - #45 int
INFO  12:26:26,029 - #45 a
INFO  12:26:26,029 - #7 ;
INFO  12:26:26,029 - #45 bool
INFO  12:26:26,029 - #45 prom
INFO  12:26:26,029 - #7 ;
INFO  12:26:26,029 - #45 char
INFO  12:26:26,029 - #45 c
INFO  12:26:26,029 - #7 ;
INFO  12:26:26,029 - #17 const
INFO  12:26:26,029 - #45 int
INFO  12:26:26,029 - #45 kons
INFO  12:26:26,029 - #6 =
INFO  12:26:26,029 - #42 5
INFO  12:26:26,029 - #7 ;
INFO  12:26:26,029 - #11 {
INFO  12:26:26,029 - #45 int
INFO  12:26:26,044 - #45 f
INFO  12:26:26,044 - #10 (
INFO  12:26:26,044 - #5 )
INFO  12:26:26,044 - #11 {
INFO  12:26:26,060 - #8 return
INFO  12:26:26,060 - #42 4
INFO  12:26:26,060 - #7 ;
INFO  12:26:26,060 - #4 }
INFO  12:26:26,060 - #45 int
INFO  12:26:26,060 - #45 myfun
INFO  12:26:26,060 - #10 (
INFO  12:26:26,060 - #45 int
INFO  12:26:26,060 - #45 abv
INFO  12:26:26,060 - #12 ,
INFO  12:26:26,060 - #45 int
INFO  12:26:26,060 - #45 myarg
INFO  12:26:26,060 - #5 )
INFO  12:26:26,060 - #11 {
INFO  12:26:26,060 - #45 myarg
INFO  12:26:26,060 - #22 ++
INFO  12:26:26,060 - #7 ;
INFO  12:26:26,060 - #8 return
INFO  12:26:26,060 - #45 myarg
INFO  12:26:26,060 - #7 ;
INFO  12:26:26,060 - #4 }
INFO  12:26:26,060 - #45 char
INFO  12:26:26,060 - #45 o
INFO  12:26:26,060 - #10 (
INFO  12:26:26,060 - #5 )
INFO  12:26:26,060 - #45 int
INFO  12:26:26,060 - #45 p
INFO  12:26:26,060 - #7 ;
INFO  12:26:26,060 - #11 {
INFO  12:26:26,060 - #8 return
INFO  12:26:26,060 - #44 a
INFO  12:26:26,060 - #7 ;
INFO  12:26:26,060 - #4 }
INFO  12:26:26,060 - #45 int
INFO  12:26:26,060 - #45 k
INFO  12:26:26,060 - #10 (
INFO  12:26:26,075 - #45 int
INFO  12:26:26,075 - #45 p
INFO  12:26:26,075 - #12 ,
INFO  12:26:26,075 - #45 int
INFO  12:26:26,075 - #45 q
INFO  12:26:26,075 - #36 [
INFO  12:26:26,075 - #37 ]
INFO  12:26:26,075 - #12 ,
INFO  12:26:26,075 - #45 char
INFO  12:26:26,075 - #45 z
INFO  12:26:26,075 - #36 [
INFO  12:26:26,075 - #37 ]
INFO  12:26:26,075 - #5 )
INFO  12:26:26,075 - #45 int
INFO  12:26:26,075 - #45 x
INFO  12:26:26,075 - #7 ;
INFO  12:26:26,075 - #11 {
INFO  12:26:26,075 - #45 q
INFO  12:26:26,075 - #36 [
INFO  12:26:26,075 - #45 q
INFO  12:26:26,075 - #36 [
INFO  12:26:26,075 - #42 1
INFO  12:26:26,075 - #37 ]
INFO  12:26:26,075 - #37 ]
INFO  12:26:26,075 - #6 =
INFO  12:26:26,075 - #42 5
INFO  12:26:26,075 - #7 ;
INFO  12:26:26,075 - #45 x
INFO  12:26:26,075 - #6 =
INFO  12:26:26,075 - #24 -
INFO  12:26:26,075 - #42 5
INFO  12:26:26,075 - #3 +
INFO  12:26:26,075 - #42 15
INFO  12:26:26,091 - #25 *
INFO  12:26:26,091 - #45 q
INFO  12:26:26,091 - #36 [
INFO  12:26:26,091 - #42 3
INFO  12:26:26,091 - #37 ]
INFO  12:26:26,091 - #7 ;
INFO  12:26:26,091 - #45 x
INFO  12:26:26,091 - #6 =
INFO  12:26:26,091 - #24 -
INFO  12:26:26,091 - #45 p
INFO  12:26:26,091 - #25 *
INFO  12:26:26,091 - #42 12
INFO  12:26:26,091 - #7 ;
INFO  12:26:26,091 - #45 p
INFO  12:26:26,091 - #6 =
INFO  12:26:26,091 - #45 q
INFO  12:26:26,091 - #36 [
INFO  12:26:26,091 - #42 3
INFO  12:26:26,091 - #37 ]
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 c
INFO  12:26:26,107 - #6 =
INFO  12:26:26,107 - #45 z
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 3
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 3
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #6 =
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 3
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #3 +
INFO  12:26:26,107 - #42 5
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 3
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #6 =
INFO  12:26:26,107 - #42 5
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #14 print
INFO  12:26:26,107 - #10 (
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #45 a
INFO  12:26:26,107 - #3 +
INFO  12:26:26,107 - #42 1
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #5 )
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #14 print
INFO  12:26:26,107 - #10 (
INFO  12:26:26,107 - #45 x
INFO  12:26:26,107 - #5 )
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #14 print
INFO  12:26:26,107 - #10 (
INFO  12:26:26,107 - #45 x
INFO  12:26:26,107 - #3 +
INFO  12:26:26,107 - #42 12
INFO  12:26:26,107 - #12 ,
INFO  12:26:26,107 - #42 1
INFO  12:26:26,107 - #5 )
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #19 read
INFO  12:26:26,107 - #10 (
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 1
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #5 )
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 0
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #23 --
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 x
INFO  12:26:26,107 - #23 --
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 prom
INFO  12:26:26,107 - #6 =
INFO  12:26:26,107 - #43 true
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 a
INFO  12:26:26,107 - #6 =
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #45 a
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #45 a
INFO  12:26:26,107 - #6 =
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 1
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #3 +
INFO  12:26:26,107 - #45 q
INFO  12:26:26,107 - #36 [
INFO  12:26:26,107 - #42 2
INFO  12:26:26,107 - #37 ]
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #8 return
INFO  12:26:26,107 - #42 5
INFO  12:26:26,107 - #3 +
INFO  12:26:26,107 - #42 1
INFO  12:26:26,107 - #3 +
INFO  12:26:26,107 - #42 2
INFO  12:26:26,107 - #7 ;
INFO  12:26:26,107 - #4 }
INFO  12:26:26,107 - #15 void
INFO  12:26:26,107 - #45 main
INFO  12:26:26,107 - #10 (
INFO  12:26:26,107 - #5 )
INFO  12:26:26,122 - #11 {
INFO  12:26:26,122 - #20 for
INFO  12:26:26,122 - #10 (
INFO  12:26:26,122 - #45 a
INFO  12:26:26,122 - #6 =
INFO  12:26:26,122 - #42 0
INFO  12:26:26,122 - #7 ;
INFO  12:26:26,122 - #45 a
INFO  12:26:26,122 - #34 <
INFO  12:26:26,122 - #42 5
INFO  12:26:26,138 - #7 ;
INFO  12:26:26,138 - #45 a
INFO  12:26:26,138 - #22 ++
INFO  12:26:26,138 - #5 )
INFO  12:26:26,138 - #11 {
INFO  12:26:26,138 - #20 for
INFO  12:26:26,138 - #10 (
INFO  12:26:26,138 - #7 ;
INFO  12:26:26,154 - #7 ;
INFO  12:26:26,154 - #5 )
INFO  12:26:26,154 - #11 {
INFO  12:26:26,154 - #4 }
INFO  12:26:26,154 - #4 }
INFO  12:26:26,154 - #14 print
INFO  12:26:26,154 - #10 (
INFO  12:26:26,154 - #45 a
INFO  12:26:26,154 - #12 ,
INFO  12:26:26,154 - #42 2
INFO  12:26:26,154 - #5 )
INFO  12:26:26,154 - #7 ;
INFO  12:26:26,154 - #45 myfun
INFO  12:26:26,154 - #10 (
INFO  12:26:26,154 - #42 1
INFO  12:26:26,154 - #12 ,
INFO  12:26:26,154 - #45 myfun
INFO  12:26:26,154 - #10 (
INFO  12:26:26,154 - #42 1
INFO  12:26:26,169 - #12 ,
INFO  12:26:26,169 - #42 1
INFO  12:26:26,169 - #5 )
INFO  12:26:26,169 - #5 )
INFO  12:26:26,169 - #7 ;
INFO  12:26:26,169 - #4 }
INFO  12:26:26,169 - #4 }
INFO  12:26:26,200 - Print calls = 4
INFO  12:26:26,200 - Generating bytecode file: D:\Trenutni pp\workspace\MJCompiler\test\program.obj
