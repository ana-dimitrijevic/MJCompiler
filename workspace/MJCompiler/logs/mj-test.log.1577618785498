INFO  23:26:56,879 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\test\program.mj
INFO  23:26:57,018 - #13 program
INFO  23:26:57,018 - #45 P
INFO  23:26:57,018 - #45 int
INFO  23:26:57,020 - #45 a
INFO  23:26:57,021 - #7 ;
INFO  23:26:57,021 - #45 bool
INFO  23:26:57,021 - #45 prom
INFO  23:26:57,022 - #7 ;
INFO  23:26:57,022 - #45 char
INFO  23:26:57,022 - #45 c
INFO  23:26:57,022 - #7 ;
INFO  23:26:57,022 - #17 const
INFO  23:26:57,022 - #45 int
INFO  23:26:57,022 - #45 kons
INFO  23:26:57,022 - #6 =
INFO  23:26:57,023 - #42 5
INFO  23:26:57,023 - #7 ;
INFO  23:26:57,023 - #11 {
INFO  23:26:57,023 - #45 int
INFO  23:26:57,024 - #45 f
INFO  23:26:57,024 - #10 (
INFO  23:26:57,025 - #5 )
INFO  23:26:57,026 - #11 {
INFO  23:26:57,027 - #8 return
INFO  23:26:57,027 - #42 4
INFO  23:26:57,027 - #7 ;
INFO  23:26:57,028 - #4 }
INFO  23:26:57,028 - #45 int
INFO  23:26:57,028 - #45 myfun
INFO  23:26:57,028 - #10 (
INFO  23:26:57,028 - #45 int
INFO  23:26:57,028 - #45 abv
INFO  23:26:57,029 - #12 ,
INFO  23:26:57,029 - #45 int
INFO  23:26:57,029 - #45 myarg
INFO  23:26:57,029 - #5 )
INFO  23:26:57,029 - #11 {
INFO  23:26:57,029 - #45 myarg
INFO  23:26:57,029 - #22 ++
INFO  23:26:57,029 - #7 ;
INFO  23:26:57,030 - #8 return
INFO  23:26:57,030 - #45 myarg
INFO  23:26:57,030 - #7 ;
INFO  23:26:57,030 - #4 }
INFO  23:26:57,030 - #45 char
INFO  23:26:57,030 - #45 o
INFO  23:26:57,030 - #10 (
INFO  23:26:57,030 - #5 )
INFO  23:26:57,030 - #45 int
INFO  23:26:57,030 - #45 p
INFO  23:26:57,031 - #7 ;
INFO  23:26:57,031 - #11 {
INFO  23:26:57,031 - #8 return
INFO  23:26:57,031 - #44 a
INFO  23:26:57,031 - #7 ;
INFO  23:26:57,031 - #4 }
INFO  23:26:57,031 - #45 int
INFO  23:26:57,031 - #45 k
INFO  23:26:57,032 - #10 (
INFO  23:26:57,038 - #45 int
INFO  23:26:57,038 - #45 p
INFO  23:26:57,038 - #12 ,
INFO  23:26:57,038 - #45 int
INFO  23:26:57,039 - #45 q
INFO  23:26:57,039 - #36 [
INFO  23:26:57,039 - #37 ]
INFO  23:26:57,039 - #12 ,
INFO  23:26:57,040 - #45 char
INFO  23:26:57,040 - #45 z
INFO  23:26:57,040 - #36 [
INFO  23:26:57,040 - #37 ]
INFO  23:26:57,040 - #5 )
INFO  23:26:57,040 - #45 int
INFO  23:26:57,040 - #45 x
INFO  23:26:57,040 - #7 ;
INFO  23:26:57,041 - #11 {
INFO  23:26:57,041 - #45 q
INFO  23:26:57,041 - #36 [
INFO  23:26:57,041 - #45 q
INFO  23:26:57,041 - #36 [
INFO  23:26:57,041 - #42 1
INFO  23:26:57,042 - #37 ]
INFO  23:26:57,042 - #37 ]
INFO  23:26:57,042 - #6 =
INFO  23:26:57,042 - #42 5
INFO  23:26:57,042 - #7 ;
INFO  23:26:57,042 - #45 x
INFO  23:26:57,042 - #6 =
INFO  23:26:57,042 - #24 -
INFO  23:26:57,042 - #42 5
INFO  23:26:57,042 - #3 +
INFO  23:26:57,043 - #42 15
INFO  23:26:57,044 - #25 *
INFO  23:26:57,044 - #45 q
INFO  23:26:57,045 - #36 [
INFO  23:26:57,045 - #42 3
INFO  23:26:57,045 - #37 ]
INFO  23:26:57,045 - #7 ;
INFO  23:26:57,045 - #45 x
INFO  23:26:57,045 - #6 =
INFO  23:26:57,046 - #24 -
INFO  23:26:57,046 - #45 p
INFO  23:26:57,046 - #25 *
INFO  23:26:57,046 - #42 12
INFO  23:26:57,046 - #7 ;
INFO  23:26:57,046 - #45 p
INFO  23:26:57,046 - #6 =
INFO  23:26:57,046 - #45 q
INFO  23:26:57,046 - #36 [
INFO  23:26:57,046 - #42 3
INFO  23:26:57,047 - #37 ]
INFO  23:26:57,047 - #7 ;
INFO  23:26:57,047 - #45 c
INFO  23:26:57,047 - #6 =
INFO  23:26:57,047 - #45 z
INFO  23:26:57,047 - #36 [
INFO  23:26:57,047 - #42 3
INFO  23:26:57,047 - #37 ]
INFO  23:26:57,047 - #7 ;
INFO  23:26:57,048 - #45 q
INFO  23:26:57,048 - #36 [
INFO  23:26:57,048 - #42 3
INFO  23:26:57,048 - #37 ]
INFO  23:26:57,048 - #6 =
INFO  23:26:57,048 - #45 q
INFO  23:26:57,048 - #36 [
INFO  23:26:57,049 - #42 3
INFO  23:26:57,049 - #37 ]
INFO  23:26:57,049 - #3 +
INFO  23:26:57,049 - #42 5
INFO  23:26:57,049 - #7 ;
INFO  23:26:57,049 - #45 q
INFO  23:26:57,049 - #36 [
INFO  23:26:57,050 - #42 3
INFO  23:26:57,050 - #37 ]
INFO  23:26:57,050 - #6 =
INFO  23:26:57,050 - #42 5
INFO  23:26:57,050 - #7 ;
INFO  23:26:57,050 - #14 print
INFO  23:26:57,050 - #10 (
INFO  23:26:57,050 - #45 q
INFO  23:26:57,050 - #36 [
INFO  23:26:57,051 - #45 a
INFO  23:26:57,051 - #3 +
INFO  23:26:57,051 - #42 1
INFO  23:26:57,051 - #37 ]
INFO  23:26:57,051 - #5 )
INFO  23:26:57,051 - #7 ;
INFO  23:26:57,051 - #14 print
INFO  23:26:57,052 - #10 (
INFO  23:26:57,054 - #45 x
INFO  23:26:57,054 - #5 )
INFO  23:26:57,054 - #7 ;
INFO  23:26:57,054 - #14 print
INFO  23:26:57,055 - #10 (
INFO  23:26:57,055 - #45 x
INFO  23:26:57,055 - #3 +
INFO  23:26:57,055 - #42 12
INFO  23:26:57,055 - #12 ,
INFO  23:26:57,055 - #42 1
INFO  23:26:57,055 - #5 )
INFO  23:26:57,055 - #7 ;
INFO  23:26:57,055 - #19 read
INFO  23:26:57,055 - #10 (
INFO  23:26:57,056 - #45 q
INFO  23:26:57,056 - #36 [
INFO  23:26:57,056 - #42 1
INFO  23:26:57,056 - #37 ]
INFO  23:26:57,056 - #5 )
INFO  23:26:57,056 - #7 ;
INFO  23:26:57,056 - #45 q
INFO  23:26:57,056 - #36 [
INFO  23:26:57,056 - #42 0
INFO  23:26:57,056 - #37 ]
INFO  23:26:57,056 - #23 --
INFO  23:26:57,056 - #7 ;
INFO  23:26:57,057 - #45 x
INFO  23:26:57,057 - #23 --
INFO  23:26:57,057 - #7 ;
INFO  23:26:57,057 - #45 prom
INFO  23:26:57,057 - #6 =
INFO  23:26:57,057 - #43 true
INFO  23:26:57,057 - #7 ;
INFO  23:26:57,057 - #45 a
INFO  23:26:57,057 - #6 =
INFO  23:26:57,057 - #45 q
INFO  23:26:57,057 - #36 [
INFO  23:26:57,057 - #45 a
INFO  23:26:57,057 - #37 ]
INFO  23:26:57,058 - #7 ;
INFO  23:26:57,058 - #45 a
INFO  23:26:57,058 - #6 =
INFO  23:26:57,058 - #45 q
INFO  23:26:57,058 - #36 [
INFO  23:26:57,058 - #42 1
INFO  23:26:57,058 - #37 ]
INFO  23:26:57,058 - #3 +
INFO  23:26:57,058 - #45 q
INFO  23:26:57,058 - #36 [
INFO  23:26:57,058 - #42 2
INFO  23:26:57,058 - #37 ]
INFO  23:26:57,058 - #7 ;
INFO  23:26:57,059 - #8 return
INFO  23:26:57,059 - #42 5
INFO  23:26:57,059 - #3 +
INFO  23:26:57,059 - #42 1
INFO  23:26:57,059 - #3 +
INFO  23:26:57,059 - #42 2
INFO  23:26:57,059 - #7 ;
INFO  23:26:57,059 - #4 }
INFO  23:26:57,059 - #15 void
INFO  23:26:57,059 - #45 main
INFO  23:26:57,060 - #10 (
INFO  23:26:57,060 - #5 )
INFO  23:26:57,060 - #11 {
INFO  23:26:57,060 - #20 for
INFO  23:26:57,061 - #10 (
INFO  23:26:57,062 - #45 a
INFO  23:26:57,062 - #6 =
INFO  23:26:57,062 - #42 0
INFO  23:26:57,062 - #7 ;
INFO  23:26:57,062 - #45 a
INFO  23:26:57,062 - #34 <
INFO  23:26:57,062 - #42 5
INFO  23:26:57,063 - #7 ;
INFO  23:26:57,064 - #45 a
INFO  23:26:57,064 - #22 ++
INFO  23:26:57,064 - #5 )
INFO  23:26:57,064 - #11 {
INFO  23:26:57,064 - #20 for
INFO  23:26:57,064 - #10 (
INFO  23:26:57,064 - #7 ;
INFO  23:26:57,064 - #7 ;
INFO  23:26:57,065 - #5 )
INFO  23:26:57,065 - #11 {
INFO  23:26:57,065 - #4 }
INFO  23:26:57,065 - #4 }
INFO  23:26:57,065 - #14 print
INFO  23:26:57,065 - #10 (
INFO  23:26:57,065 - #45 a
INFO  23:26:57,066 - #12 ,
INFO  23:26:57,066 - #42 2
INFO  23:26:57,066 - #5 )
INFO  23:26:57,066 - #7 ;
INFO  23:26:57,066 - #4 }
INFO  23:26:57,066 - #4 }
INFO  23:26:57,078 - Print calls = 4
INFO  23:26:57,079 - Generating bytecode file: D:\Trenutni pp\workspace\MJCompiler\test\program.obj
INFO  23:26:57,083 - Parsiranje uspesno zavrseno!
