INFO  12:10:32,385 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\unit tests\functionsTest.mj
INFO  12:10:32,472 - #13 program
INFO  12:10:32,472 - #45 MJProgram
INFO  12:10:32,473 - #45 int
INFO  12:10:32,474 - #45 a
INFO  12:10:32,475 - #12 ,
INFO  12:10:32,476 - #45 b
INFO  12:10:32,476 - #7 ;
INFO  12:10:32,476 - #45 char
INFO  12:10:32,477 - #45 arr
INFO  12:10:32,477 - #36 [
INFO  12:10:32,477 - #37 ]
INFO  12:10:32,477 - #7 ;
INFO  12:10:32,477 - #11 {
INFO  12:10:32,477 - #15 void
INFO  12:10:32,478 - #45 fun
INFO  12:10:32,479 - #10 (
INFO  12:10:32,480 - #5 )
INFO  12:10:32,481 - #45 char
INFO  12:10:32,482 - #45 c
INFO  12:10:32,482 - #7 ;
INFO  12:10:32,483 - #11 {
INFO  12:10:32,483 - #9 if
INFO  12:10:32,485 - #10 (
INFO  12:10:32,486 - #45 len
INFO  12:10:32,486 - #10 (
INFO  12:10:32,488 - #45 arr
INFO  12:10:32,488 - #5 )
INFO  12:10:32,488 - #31 !=
INFO  12:10:32,488 - #42 0
INFO  12:10:32,490 - #5 )
INFO  12:10:32,492 - #11 {
INFO  12:10:32,493 - #45 c
INFO  12:10:32,493 - #6 =
INFO  12:10:32,493 - #45 arr
INFO  12:10:32,493 - #36 [
INFO  12:10:32,494 - #42 0
INFO  12:10:32,494 - #37 ]
INFO  12:10:32,494 - #7 ;
INFO  12:10:32,496 - #14 print
INFO  12:10:32,496 - #10 (
INFO  12:10:32,496 - #45 c
INFO  12:10:32,496 - #12 ,
INFO  12:10:32,497 - #42 5
INFO  12:10:32,497 - #5 )
INFO  12:10:32,497 - #7 ;
INFO  12:10:32,497 - #4 }
INFO  12:10:32,497 - #8 return
INFO  12:10:32,499 - #7 ;
INFO  12:10:32,499 - #4 }
INFO  12:10:32,500 - #45 bool
INFO  12:10:32,500 - #45 fun2
INFO  12:10:32,501 - #10 (
INFO  12:10:32,501 - #45 int
INFO  12:10:32,501 - #45 a
INFO  12:10:32,501 - #12 ,
INFO  12:10:32,502 - #45 int
INFO  12:10:32,502 - #45 b
INFO  12:10:32,502 - #5 )
INFO  12:10:32,503 - #45 int
INFO  12:10:32,509 - #45 sum
INFO  12:10:32,509 - #7 ;
INFO  12:10:32,509 - #11 {
INFO  12:10:32,509 - #9 if
INFO  12:10:32,510 - #10 (
INFO  12:10:32,510 - #10 (
INFO  12:10:32,510 - #45 a
INFO  12:10:32,510 - #3 +
INFO  12:10:32,510 - #45 b
INFO  12:10:32,511 - #5 )
INFO  12:10:32,512 - #32 >
INFO  12:10:32,512 - #42 10
INFO  12:10:32,513 - #5 )
INFO  12:10:32,513 - #11 {
INFO  12:10:32,513 - #45 sum
INFO  12:10:32,513 - #6 =
INFO  12:10:32,513 - #45 a
INFO  12:10:32,514 - #3 +
INFO  12:10:32,514 - #45 b
INFO  12:10:32,514 - #7 ;
INFO  12:10:32,514 - #14 print
INFO  12:10:32,514 - #10 (
INFO  12:10:32,514 - #45 sum
INFO  12:10:32,514 - #5 )
INFO  12:10:32,515 - #7 ;
INFO  12:10:32,515 - #8 return
INFO  12:10:32,515 - #43 true
INFO  12:10:32,515 - #7 ;
INFO  12:10:32,516 - #4 }
INFO  12:10:32,516 - #8 return
INFO  12:10:32,516 - #43 false
INFO  12:10:32,516 - #7 ;
INFO  12:10:32,517 - #4 }
INFO  12:10:32,517 - #15 void
INFO  12:10:32,517 - #45 main
INFO  12:10:32,517 - #10 (
INFO  12:10:32,517 - #5 )
INFO  12:10:32,517 - #45 int
INFO  12:10:32,517 - #45 i
INFO  12:10:32,517 - #7 ;
INFO  12:10:32,517 - #11 {
INFO  12:10:32,517 - #45 arr
INFO  12:10:32,517 - #6 =
INFO  12:10:32,518 - #18 new
INFO  12:10:32,518 - #45 char
INFO  12:10:32,518 - #36 [
INFO  12:10:32,518 - #42 4
INFO  12:10:32,518 - #37 ]
INFO  12:10:32,518 - #7 ;
INFO  12:10:32,518 - #45 arr
INFO  12:10:32,518 - #36 [
INFO  12:10:32,519 - #42 0
INFO  12:10:32,519 - #37 ]
INFO  12:10:32,519 - #6 =
INFO  12:10:32,519 - #44 a
INFO  12:10:32,519 - #7 ;
INFO  12:10:32,520 - #9 if
INFO  12:10:32,520 - #10 (
INFO  12:10:32,520 - #45 fun2
INFO  12:10:32,520 - #10 (
INFO  12:10:32,520 - #5 )
INFO  12:10:32,521 - #5 )
INFO  12:10:32,521 - #11 {
INFO  12:10:32,521 - #45 i
INFO  12:10:32,521 - #6 =
INFO  12:10:32,521 - #42 0
INFO  12:10:32,521 - #7 ;
INFO  12:10:32,524 - #20 for
INFO  12:10:32,527 - #10 (
INFO  12:10:32,529 - #7 ;
INFO  12:10:32,529 - #45 i
INFO  12:10:32,530 - #34 <
INFO  12:10:32,531 - #42 3
INFO  12:10:32,531 - #7 ;
INFO  12:10:32,532 - #45 i
INFO  12:10:32,533 - #22 ++
INFO  12:10:32,533 - #5 )
INFO  12:10:32,533 - #11 {
INFO  12:10:32,534 - #45 fun
INFO  12:10:32,535 - #10 (
INFO  12:10:32,535 - #5 )
INFO  12:10:32,536 - #7 ;
INFO  12:10:32,536 - #4 }
INFO  12:10:32,536 - #4 }
INFO  12:10:32,536 - #4 }
INFO  12:10:32,536 - #4 }
ERROR 12:10:32,552 - Greska: Prosledjeno: 0; Ocekivano: 2 argumenata na liniji 27
ERROR 12:10:32,552 - Greska: izraz mora biti bool tipa na liniji 27
INFO  12:10:32,552 - Print calls = 2
ERROR 12:10:32,553 - Parsiranje NIJE uspesno zavrseno!
