INFO  13:59:19,625 - Compiling source file: D:\Trenutni pp\workspace\MJCompiler\unit tests\functionsTest.mj
INFO  13:59:19,686 - #13 program
INFO  13:59:19,686 - #45 MJProgram
INFO  13:59:19,687 - #45 int
INFO  13:59:19,688 - #45 a
INFO  13:59:19,689 - #12 ,
INFO  13:59:19,689 - #45 b
INFO  13:59:19,689 - #7 ;
INFO  13:59:19,690 - #45 char
INFO  13:59:19,690 - #45 arr
INFO  13:59:19,690 - #36 [
INFO  13:59:19,690 - #37 ]
INFO  13:59:19,690 - #7 ;
INFO  13:59:19,691 - #11 {
INFO  13:59:19,691 - #15 void
INFO  13:59:19,692 - #45 fun
INFO  13:59:19,692 - #10 (
INFO  13:59:19,693 - #5 )
INFO  13:59:19,694 - #45 char
INFO  13:59:19,695 - #45 c
INFO  13:59:19,695 - #7 ;
INFO  13:59:19,695 - #11 {
INFO  13:59:19,696 - #14 print
INFO  13:59:19,698 - #10 (
INFO  13:59:19,698 - #44 f
INFO  13:59:19,698 - #5 )
INFO  13:59:19,699 - #7 ;
INFO  13:59:19,699 - #14 print
INFO  13:59:19,700 - #10 (
INFO  13:59:19,700 - #44 u
INFO  13:59:19,700 - #5 )
INFO  13:59:19,700 - #7 ;
INFO  13:59:19,700 - #14 print
INFO  13:59:19,700 - #10 (
INFO  13:59:19,700 - #44 n
INFO  13:59:19,700 - #5 )
INFO  13:59:19,700 - #7 ;
INFO  13:59:19,700 - #8 return
INFO  13:59:19,701 - #7 ;
INFO  13:59:19,701 - #4 }
INFO  13:59:19,701 - #45 bool
INFO  13:59:19,702 - #45 fun2
INFO  13:59:19,702 - #10 (
INFO  13:59:19,702 - #45 int
INFO  13:59:19,702 - #45 a
INFO  13:59:19,702 - #12 ,
INFO  13:59:19,703 - #45 int
INFO  13:59:19,703 - #45 b
INFO  13:59:19,703 - #5 )
INFO  13:59:19,703 - #45 int
INFO  13:59:19,703 - #45 sum
INFO  13:59:19,704 - #7 ;
INFO  13:59:19,704 - #11 {
INFO  13:59:19,704 - #9 if
INFO  13:59:19,704 - #10 (
INFO  13:59:19,705 - #10 (
INFO  13:59:19,705 - #45 a
INFO  13:59:19,705 - #3 +
INFO  13:59:19,706 - #45 b
INFO  13:59:19,707 - #5 )
INFO  13:59:19,714 - #32 >
INFO  13:59:19,714 - #42 10
INFO  13:59:19,715 - #5 )
INFO  13:59:19,716 - #11 {
INFO  13:59:19,717 - #45 sum
INFO  13:59:19,717 - #6 =
INFO  13:59:19,717 - #45 a
INFO  13:59:19,717 - #3 +
INFO  13:59:19,717 - #45 b
INFO  13:59:19,717 - #7 ;
INFO  13:59:19,718 - #14 print
INFO  13:59:19,718 - #10 (
INFO  13:59:19,718 - #45 sum
INFO  13:59:19,718 - #5 )
INFO  13:59:19,718 - #7 ;
INFO  13:59:19,718 - #8 return
INFO  13:59:19,718 - #43 true
INFO  13:59:19,718 - #7 ;
INFO  13:59:19,718 - #4 }
INFO  13:59:19,718 - #2 else
INFO  13:59:19,719 - #11 {
INFO  13:59:19,719 - #8 return
INFO  13:59:19,719 - #43 false
INFO  13:59:19,719 - #7 ;
INFO  13:59:19,720 - #4 }
INFO  13:59:19,720 - #4 }
INFO  13:59:19,720 - #15 void
INFO  13:59:19,720 - #45 recursive
INFO  13:59:19,721 - #10 (
INFO  13:59:19,721 - #45 int
INFO  13:59:19,721 - #45 a
INFO  13:59:19,721 - #12 ,
INFO  13:59:19,721 - #45 int
INFO  13:59:19,721 - #45 b
INFO  13:59:19,721 - #5 )
INFO  13:59:19,721 - #11 {
INFO  13:59:19,722 - #8 return
INFO  13:59:19,722 - #45 recursive
INFO  13:59:19,722 - #10 (
INFO  13:59:19,723 - #45 a
INFO  13:59:19,723 - #12 ,
INFO  13:59:19,723 - #45 b
INFO  13:59:19,723 - #5 )
INFO  13:59:19,723 - #7 ;
INFO  13:59:19,724 - #4 }
INFO  13:59:19,724 - #15 void
INFO  13:59:19,724 - #45 main
INFO  13:59:19,724 - #10 (
INFO  13:59:19,724 - #5 )
INFO  13:59:19,724 - #45 int
INFO  13:59:19,724 - #45 i
INFO  13:59:19,724 - #7 ;
INFO  13:59:19,724 - #11 {
INFO  13:59:19,724 - #45 arr
INFO  13:59:19,725 - #6 =
INFO  13:59:19,725 - #18 new
INFO  13:59:19,725 - #45 char
INFO  13:59:19,725 - #36 [
INFO  13:59:19,725 - #42 4
INFO  13:59:19,725 - #37 ]
INFO  13:59:19,725 - #7 ;
INFO  13:59:19,726 - #45 arr
INFO  13:59:19,726 - #36 [
INFO  13:59:19,726 - #42 0
INFO  13:59:19,726 - #37 ]
INFO  13:59:19,726 - #6 =
INFO  13:59:19,726 - #44 a
INFO  13:59:19,728 - #7 ;
INFO  13:59:19,729 - #9 if
INFO  13:59:19,729 - #10 (
INFO  13:59:19,729 - #45 fun2
INFO  13:59:19,730 - #10 (
INFO  13:59:19,730 - #42 6
INFO  13:59:19,730 - #12 ,
INFO  13:59:19,730 - #42 6
INFO  13:59:19,730 - #5 )
INFO  13:59:19,730 - #5 )
INFO  13:59:19,731 - #11 {
INFO  13:59:19,731 - #45 i
INFO  13:59:19,731 - #6 =
INFO  13:59:19,731 - #42 0
INFO  13:59:19,731 - #7 ;
INFO  13:59:19,731 - #20 for
INFO  13:59:19,731 - #10 (
INFO  13:59:19,732 - #7 ;
INFO  13:59:19,733 - #45 i
INFO  13:59:19,734 - #34 <
INFO  13:59:19,734 - #42 3
INFO  13:59:19,734 - #7 ;
INFO  13:59:19,734 - #45 i
INFO  13:59:19,735 - #22 ++
INFO  13:59:19,735 - #5 )
INFO  13:59:19,736 - #11 {
INFO  13:59:19,737 - #45 fun
INFO  13:59:19,738 - #10 (
INFO  13:59:19,739 - #5 )
INFO  13:59:19,740 - #7 ;
INFO  13:59:19,740 - #4 }
INFO  13:59:19,740 - #4 }
INFO  13:59:19,741 - #45 funn
INFO  13:59:19,742 - #10 (
INFO  13:59:19,742 - #5 )
INFO  13:59:19,742 - #7 ;
INFO  13:59:19,742 - #45 i
INFO  13:59:19,742 - #10 (
INFO  13:59:19,742 - #5 )
INFO  13:59:19,742 - #7 ;
INFO  13:59:19,742 - #45 fun
INFO  13:59:19,743 - #10 (
INFO  13:59:19,743 - #42 3
INFO  13:59:19,743 - #5 )
INFO  13:59:19,743 - #7 ;
INFO  13:59:19,743 - #45 fun2
INFO  13:59:19,743 - #10 (
INFO  13:59:19,743 - #42 1
INFO  13:59:19,743 - #12 ,
INFO  13:59:19,743 - #44 a
INFO  13:59:19,743 - #5 )
INFO  13:59:19,743 - #7 ;
INFO  13:59:19,743 - #4 }
INFO  13:59:19,743 - #4 }
ERROR 13:59:19,757 - Greska: povratna vrednost funkcije recursive ne moze biti deo izraza
ERROR 13:59:19,758 - Greska: tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije recursive
ERROR 13:59:19,758 - Greska: funn nije deklarisano!  na liniji 48
ERROR 13:59:19,759 - Dezignator imena i nije metoda  na liniji 49
ERROR 13:59:19,759 - Greska: Ocekivano 0 argumenata, a pri pozivu prosledjeno 1 na liniji 50
ERROR 13:59:19,759 - Greska: razlikuju se tip ocekivanog i stvarnog argumenta 2/2 na liniji 51
INFO  13:59:19,759 - Print calls = 4
ERROR 13:59:19,760 - Parsiranje NIJE uspesno zavrseno!
